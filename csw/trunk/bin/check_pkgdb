#!/opt/csw/bin/perl -w
#
# $Id$
#
# Copyright 2006 Cory Omand <comand@blastwave.org>
# All rights reserved.  Use is subject to license terms.
#
# Redistribution and/or use, with or without modification, is
# permitted.  This software is without warranty of any kind.  The
# author(s) shall not be liable in the event that use of the
# software causes damage.
#
# check_pkgdb - Look up a build item (e.g. lang/perl) in the CSW
#               package database.
#

use strict;
use File::Spec::Functions q/catfile/;
use Getopt::Std;
use vars qw/$opt_d $opt_r $opt_h $opt_o/;

getopts('hr:d:o:');

die "Usage: $0 [-r <rootdir>] [-d <dbfile>] [-o <outfile>] item\n"
    if defined $opt_h or scalar @ARGV == 0;

my $root  = $opt_r || '/export/home/comand/Documents/Work/csw';
my $pkgdb = $opt_d || catfile($root, 'pkg.db');

# Build the database if it does not exist, otherwise load it
my $pkgdb_src = -f $pkgdb
    ? $pkgdb
    : "$root/bin/build_pkgdb $root | tee $pkgdb |";

my %PKGDB;
open PKGDB, $pkgdb_src or die "Failed to open '$pkgdb_src': $!";
while (<PKGDB>) {
    chomp;
    my ($bdir, $pname, $pdesc) = split /\|/, $_, 3;
    $PKGDB{$bdir}{$pname} = $pdesc;
}
close PKGDB;

die "Unable to continue -- no entries in database.\n"
    unless scalar keys %PKGDB;

# Determine where to send output
my $out_h;
if ($opt_o) {
    open OUTH, ">> $opt_o" or die "Failed to open '$opt_o': $!";
    $out_h = \*OUTH;
}
else {
    $out_h = \*STDOUT;
}

# Print output in depend style
foreach my $check (@ARGV) {
    if (exists $PKGDB{$check}) {
        foreach my $pkgname (sort keys %{ $PKGDB{$check} }) {
            print $out_h "P $pkgname $PKGDB{$check}{$pkgname}\n";
        }
    }
    else {
        print STDERR "No package db entry for $check\n";
    }
}
