#!/bin/env perl -lw
#
# $Id$
#
# Copyright 2006 Cory Omand <comand@blastwave.org>
# All rights reserved.  Use is subject to license terms.
#
# Redistribution and/or use, with or without modification, is
# permitted.  This software is without warranty of any kind.  The
# author(s) shall not be liable in the event that use of the
# software causes damage.
#
# cswproto - Create package prototypes which adhere to CSW standards.
#

use strict;
use File::Basename;
use File::Spec::Functions qw/catfile/;
use Getopt::Long qw/:config no_ignore_case/;
use POSIX;

use vars qw/
    @XPATS @XFORMS @Common $StdOwn $StdGrp $StdDirPerm $stamp $root
    /;

# atime=8,mtime=9,ctime=10
use constant TIME_FIELD => 10;

# Prototype defaults
$StdOwn     = 'root';
$StdGrp     = 'bin';
$StdDirPerm = '0755';

# Path transforms
@XFORMS = (
    [ qr{^/opt/csw/man$},  q{/opt/csw/share/man}  ],
    [ qr{^/opt/csw/doc$},  q{/opt/csw/share/doc}  ],
    [ qr{^/opt/csw/info$}, q{/opt/csw/share/info} ],
);

# Standard exclusions
@XPATS = (
    qr{^/$},
    qr{^/opt$},
    qr{^/opt/csw$},
    qr{perllocal\.pod},
    qr{~$},
);

# Print usage information and exit
sub usage {
    print join(" ", @_) if @_;

    my $program = basename $0;
    print <<"_USAGE_";
Usage: $program [-h] [-s <timestamp>] path1[=path1] ... pathN[=pathN]

    -s      Timestamp source.
            The path to a file to be used as the base timestamp for prototype
            operations.  If this is specified, all source file creation times
            are compared to the creation time of this file.  Files created
            *before* this time will be excluded from the prototype.

    -h      Display brief usage.

    pathN   The remainder of arguments to this command will be specified
            directly to pkgproto.  These arguments specify which paths are to
            be included in the prototype.  This can be specified as
            pathX=pathY to use a different prefix for files in the prototype
            than were present on the build system.
_USAGE_

    exit 1;
}

# Check whether a path is a 'common' file, defined in __DATA__
sub is_common {
    my $path = shift;
    foreach my $pat (@Common) {
        return 1 if $path =~ /$pat$/;
    }
    return 0;
}

# Returns true if the file should be excluded, false otherwise.
sub exclude {
    my $path = shift;

    return 1 unless $path;

    die "Path $path is not readable by current user!\n" unless -r $path or -l $path;

    my $time = (lstat($path))[TIME_FIELD];
    return ($time >= $stamp) ? 0 : 1;
}

#
# MAIN EXECUTION
#

# Process command line arguments
my $test;
GetOptions(
    'root=s'  => \$root,
    'stamp=s' => \$stamp,
    'help'    => \&usage,
) or usage;

usage "Error: timestamp '$stamp' not readable" if $stamp and not -r $stamp;
usage "Error: one or more pkgproto patterns required" unless @ARGV;

$stamp = $stamp ? (stat($stamp))[TIME_FIELD] : 0;

# Load common path contents
while (<DATA>) {
    chomp; next if /^\s*$/ or /^#/;
    push @Common, qr#$_$#;
}

my @prototype;

foreach my $protopat (@ARGV) {
    my ($actual, $virtual) = split /=/, $protopat;

    my @pproto = `/usr/bin/pkgproto $protopat`;
    die "Failed to generate prototype"
        unless WIFEXITED($?) and WEXITSTATUS($?) == 0;

SPECLINE:
    foreach my $entry (@pproto) {
        chomp $entry;
        do { print $entry; next } if $entry =~ /^(?:i|\!)/;

        my @F = split /\s+/, $entry;
        my ($lhs, $rhs) = split /=/, $F[2];

        # Find the real path
        my $realpath;
        if ($F[0] eq 's' or $F[0] eq 'l') {
            $realpath = substr($lhs, 0, 1) ne '/'
                ? catfile($actual, $lhs)
                : $lhs;

            $F[2] = join "=", $lhs, basename($rhs) if $F[0] eq 'l';
        }
        else {
            $F[2] = $lhs if $lhs and $rhs;
            $realpath = $rhs
                ? $rhs
                : (substr($lhs, 0, 1) ne '/' ? catfile($actual, $lhs) : $lhs);
        }

        # Then do path transforms
        foreach my $xform (@XFORMS)  { $F[2] =~ s/$xform->[0]/$xform->[1]/g }
        $F[2] =~ s/$root// if $root;
        next unless $F[2];

        # Then process any excludes
        foreach my $pattern (@XPATS) { next SPECLINE if $F[2] =~ $pattern   }
        next if exclude($realpath);

        # Fix up dir permissions/file ownership.
        $F[3] = $StdDirPerm if $F[0] eq 'd';
        ($F[4], $F[5]) = ( $StdOwn, $StdGrp )
            unless $F[0] eq 's' or $F[0] eq 'l';

        push @prototype, [ grep { defined $_ } @F ];
    }
}

print join " " => @$_ foreach (sort { $a->[2] cmp $b->[2] } @prototype);

# Common directories (CSWcommon plus a few others)
__DATA__
/opt/csw
/opt/csw/bin
/opt/csw/bin/i386
/opt/csw/bin/i486
/opt/csw/bin/pentium
/opt/csw/bin/pentium_pro
/opt/csw/bin/pentium_pro\+mmx
/opt/csw/bin/sparcv8
/opt/csw/bin/sparcv8plus
/opt/csw/bin/sparcv8plus\+vis
/opt/csw/bin/sparcv9
/opt/csw/doc
/opt/csw/include
/opt/csw/info
/opt/csw/lib
/opt/csw/lib/32
/opt/csw/lib/64
/opt/csw/lib/X11
/opt/csw/lib/X11/app-defaults
/opt/csw/lib/i386
/opt/csw/lib/locale
/opt/csw/lib/pentium
/opt/csw/lib/pentium_pro
/opt/csw/lib/pentium_pro\+mmx
/opt/csw/lib/perl
/opt/csw/lib/perl/csw
/opt/csw/lib/perl/csw/auto
/opt/csw/lib/perl/site_perl
/opt/csw/lib/pkgconfig
/opt/csw/lib/sparcv8
/opt/csw/lib/sparcv8plus
/opt/csw/lib/sparcv8plus\+vis
/opt/csw/lib/sparcv9
/opt/csw/lib/sparcv9\+vis2
/opt/csw/man
/opt/csw/sbin
/opt/csw/share
/opt/csw/share/doc
/opt/csw/share/info
/opt/csw/share/locale
/opt/csw/share/locale/az
/opt/csw/share/locale/az/LC_MESSAGES
/opt/csw/share/locale/be
/opt/csw/share/locale/be/LC_MESSAGES
/opt/csw/share/locale/bg
/opt/csw/share/locale/bg/LC_MESSAGES
/opt/csw/share/locale/bg/LC_TIME
/opt/csw/share/locale/ca
/opt/csw/share/locale/ca/LC_MESSAGES
/opt/csw/share/locale/cs
/opt/csw/share/locale/cs/LC_MESSAGES
/opt/csw/share/locale/cs/LC_TIME
/opt/csw/share/locale/da
/opt/csw/share/locale/da/LC_MESSAGES
/opt/csw/share/locale/da/LC_TIME
/opt/csw/share/locale/de
/opt/csw/share/locale/de/LC_MESSAGES
/opt/csw/share/locale/de/LC_TIME
/opt/csw/share/locale/el
/opt/csw/share/locale/el/LC_MESSAGES
/opt/csw/share/locale/el/LC_TIME
/opt/csw/share/locale/en@boldquot
/opt/csw/share/locale/en@boldquot/LC_MESSAGES
/opt/csw/share/locale/en@quot
/opt/csw/share/locale/en@quot/LC_MESSAGES
/opt/csw/share/locale/es
/opt/csw/share/locale/es/LC_MESSAGES
/opt/csw/share/locale/es/LC_TIME
/opt/csw/share/locale/et
/opt/csw/share/locale/et/LC_MESSAGES
/opt/csw/share/locale/eu
/opt/csw/share/locale/eu/LC_MESSAGES
/opt/csw/share/locale/fi
/opt/csw/share/locale/fi/LC_MESSAGES
/opt/csw/share/locale/fr
/opt/csw/share/locale/fr/LC_MESSAGES
/opt/csw/share/locale/fr/LC_TIME
/opt/csw/share/locale/ga
/opt/csw/share/locale/ga/LC_MESSAGES
/opt/csw/share/locale/gl
/opt/csw/share/locale/gl/LC_MESSAGES
/opt/csw/share/locale/gl/LC_TIME
/opt/csw/share/locale/he
/opt/csw/share/locale/he/LC_MESSAGES
/opt/csw/share/locale/hr
/opt/csw/share/locale/hr/LC_MESSAGES
/opt/csw/share/locale/hu
/opt/csw/share/locale/hu/LC_MESSAGES
/opt/csw/share/locale/id
/opt/csw/share/locale/id/LC_MESSAGES
/opt/csw/share/locale/it
/opt/csw/share/locale/it/LC_MESSAGES
/opt/csw/share/locale/it/LC_TIME
/opt/csw/share/locale/ja
/opt/csw/share/locale/ja/LC_MESSAGES
/opt/csw/share/locale/ja/LC_TIME
/opt/csw/share/locale/ko
/opt/csw/share/locale/ko/LC_MESSAGES
/opt/csw/share/locale/ko/LC_TIME
/opt/csw/share/locale/locale.alias
/opt/csw/share/locale/lt
/opt/csw/share/locale/lt/LC_MESSAGES
/opt/csw/share/locale/nl
/opt/csw/share/locale/nl/LC_MESSAGES
/opt/csw/share/locale/nl/LC_TIME
/opt/csw/share/locale/nn
/opt/csw/share/locale/nn/LC_MESSAGES
/opt/csw/share/locale/no
/opt/csw/share/locale/no/LC_MESSAGES
/opt/csw/share/locale/no/LC_TIME
/opt/csw/share/locale/pl
/opt/csw/share/locale/pl/LC_MESSAGES
/opt/csw/share/locale/pl/LC_TIME
/opt/csw/share/locale/pt
/opt/csw/share/locale/pt/LC_MESSAGES
/opt/csw/share/locale/pt/LC_TIME
/opt/csw/share/locale/pt_BR
/opt/csw/share/locale/pt_BR/LC_MESSAGES
/opt/csw/share/locale/pt_BR/LC_TIME
/opt/csw/share/locale/ro
/opt/csw/share/locale/ro/LC_MESSAGES
/opt/csw/share/locale/ru
/opt/csw/share/locale/ru/LC_MESSAGES
/opt/csw/share/locale/ru/LC_TIME
/opt/csw/share/locale/sk
/opt/csw/share/locale/sk/LC_MESSAGES
/opt/csw/share/locale/sk/LC_TIME
/opt/csw/share/locale/sl
/opt/csw/share/locale/sl/LC_MESSAGES
/opt/csw/share/locale/sl/LC_TIME
/opt/csw/share/locale/sp
/opt/csw/share/locale/sp/LC_MESSAGES
/opt/csw/share/locale/sr
/opt/csw/share/locale/sr/LC_MESSAGES
/opt/csw/share/locale/sv
/opt/csw/share/locale/sv/LC_MESSAGES
/opt/csw/share/locale/sv/LC_TIME
/opt/csw/share/locale/tr
/opt/csw/share/locale/tr/LC_MESSAGES
/opt/csw/share/locale/uk
/opt/csw/share/locale/uk/LC_MESSAGES
/opt/csw/share/locale/vi
/opt/csw/share/locale/vi/LC_MESSAGES
/opt/csw/share/locale/wa
/opt/csw/share/locale/wa/LC_MESSAGES
/opt/csw/share/locale/zh
/opt/csw/share/locale/zh/LC_MESSAGES
/opt/csw/share/locale/zh/LC_TIME
/opt/csw/share/locale/zh_CN
/opt/csw/share/locale/zh_CN.GB2312
/opt/csw/share/locale/zh_CN.GB2312/LC_MESSAGES
/opt/csw/share/locale/zh_TW
/opt/csw/share/locale/zh_TW.Big5
/opt/csw/share/locale/zh_TW.Big5/LC_MESSAGES
/opt/csw/share/locale/zh_TW/LC_MESSAGES
/opt/csw/share/man
/opt/csw/share/man/man\d
/opt/csw/share/perl
/opt/csw/share/perl/csw
/opt/csw/share/perl/csw/auto
/opt/csw/share/perl/site_perl
/opt/csw/var
