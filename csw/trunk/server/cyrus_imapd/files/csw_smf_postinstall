#
# Copyright 2006 Yann Rouillard <yann@pleiades.fr.eu.org>
# All rights reserved.  Use is subject to license terms.
#
# Redistribution and/or use, with or without modification, is
# permitted.  This code is without warranty of any kind.  The
# author(s) shall not be liable in the event that use of the
# software causes damage.
#
# postinstall script which restore the previous state of 
# services (enabled/disabled/...)
#


# returns the list of frmi defined in a given manifest file
get_fmri_list ()
{
	chroot "$PKG_INSTALL_ROOT" /usr/sbin/svccfg inventory "$1" | awk -F: ' NF > 2 { print $0 }'
}


# retrieve the previous state of a service
load_smf_service_state ()
{
	SERVICE_STATE="disabled"

	if [ -f "$STATE_FILE" ]; then
		set -- `/usr/bin/awk " \\\$1 == \"$1\" { print \\\$2 } " "$STATE_FILE"`
		if [ "$1" = "enabled" ]; then
			SERVICE_STATE="enabled"
		fi
		return 0
	fi
	return 1
}


# retrieve the previous state of a service
load_init_service_state ()
{
	_INIT_FILE="$1"
	SERVICE_STATE="disabled"

	_INUM=`ls -i "$_INIT_FILE" | /usr/bin/awk '{ print $1 }' 2>/dev/null`
	# we just search for any startup script in runlevels
	if [ -n "`/usr/bin/find /etc/rc[S0-6].d -follow -inum \"$_INUM\" -name \"S??*\" 2>/dev/null`" ]; then
		SERVICE_STATE="enabled"
	fi		
}


# retrieve the autoenable value for the given service
get_autoenable ()
{
	SERVICE_STATE="enabled"

	for _FILE in /opt/csw/etc/csw.conf /etc/opt/csw/csw.conf; do
		if [ -f "$PKG_INSTALL_ROOT/$_FILE" ]; then
			. "$PKG_INSTALL_ROOT/$_FILE"
			if [ -n "$1" ]; then
				eval SERVICE_STATE=\$autoenable_$1
			fi
			if [ -z "$SERVICE_STATE" ]; then
				SERVICE_STATE="$autoenable_daemons"
			fi
		fi
	done

	if [ "$SERVICE_STATE" != "no" ]; then
		SERVICE_STATE="enabled"
		return 0
	else
		SERVICE_STATE="disabled"
		return 1
	fi
}



if [ -z "$PKG_INSTALL_ROOT" ]; then 
	PKG_INSTALL_ROOT=/
fi

set -- $NAME
SOFTWARE_NAME="$1"

# is SMF available ?
if [ "$SMF" = "yes" ]; then

	STATE_FILE="$PKG_INSTALL_ROOT/tmp/$PKG.smfinfo" 

        # we always copy the service configuration file in the smf case
	# as svcadm can be used to disable the service, instead of relying
	# on the presence of the configuration file
	for CONF_FILE in $SERVICE_CONF_FILES; do
		if [ ! -f $CONF_FILE ]; then
			cp ${CONF_FILE}.CSW $CONF_FILE
		fi
	done

	for FILE in $MANIFEST_FILES; do
		for FMRI in `get_fmri_list "$FILE"`; do
			load_smf_service_state "$FMRI"
			# no previous service state, so we rely on autoenable
			# configuration variable, if this service can be autoenabled !
			if [ "$?" -ne 0 ] && [ "$CAN_BE_AUTOENABLED" != "no" ]; then
				get_autoenable "$SOFTWARE_NAME"
			fi	

			if [ "$SERVICE_STATE" = "enabled" ]; then
				chroot "$PKG_INSTALL_ROOT" /usr/sbin/svcadm enable "$FMRI" >/dev/null 2>&1
			else
				chroot "$PKG_INSTALL_ROOT" /usr/sbin/svcadm disable "$FMRI" >/dev/null 2>&1
			fi
		done
	done

	rm -f "$STATE_FILE"

else
	for FILE in $INIT_FILES; do
		load_init_service_state "$FILE"
		if [ "$SERVICE_STATE" = "enabled" ]; then
			if get_autoenable "$SOFTWARE_NAME"; then
				if [ "$CAN_BE_AUTOENABLED" != "no" ]; then
					# we copy the service configuration file to be able 
					# to enable the service
					for CONF_FILE in $SERVICE_CONF_FILES; do
						if [ ! -f $CONF_FILE ]; then
							cp ${CONF_FILE}.CSW $CONF_FILE
						fi
					done
				fi
				chroot "$PKG_INSTALL_ROOT" "$FILE" start
			fi
		fi
	done

fi


exit 0
