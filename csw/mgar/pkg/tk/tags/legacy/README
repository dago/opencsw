###############################################################################
#
# FILE:         README
#
# DESCRIPTION:  Instructions for creating the TK package.  Refer to the
#               BUILD.NOTES file for specific information about the actual
#               build and testing of the current version.
#
# PACKAGE:      CSWtk
#
# REVISION:     04-27-08
#
# NOTES:	Build the tcl package first.
#
###############################################################################

-------------------------------------------------------------------------------
01: Switch to the correct build machine
-------------------------------------------------------------------------------

	SPARC:	    wr
	  or
	INTEL:	    wt

-------------------------------------------------------------------------------
02: Set the proper build environment
-------------------------------------------------------------------------------

	SPARC:	    export CC='cc -xarch=v8 -xstrconst -xildoff'
	  or
	INTEL:	    export CC='cc -xtarget=pentium -xstrconst -xildoff' 

-------------------------------------------------------------------------------
03: Make sure tcl source is unpacked and configured      (if not already done)
-------------------------------------------------------------------------------

	Tcl should have been previously compiled on this platform.  If not:
	    cd pkgs/tcl/src
	    make unpack
	    cd tcl*[0-9]/unix 
	    
	    make distclean
	    ../../CJSA.configure
	    make

-------------------------------------------------------------------------------
04: Update the pkginfo file
-------------------------------------------------------------------------------

	cd pkgs/tk
	vi pkginfo
	    [edit the version info: must include REV=YYYY.MM.DD]
	    [edit the ARCH line for either a 'sparc' or 'i386' build]

-------------------------------------------------------------------------------
05: Create symlink to tcl source   (only needs to be done once per release)
-------------------------------------------------------------------------------

	cd src
	make links					# create TCL links
	ls tcl*[0-9]/unix; ls -lL tcl.h			# check the links

-------------------------------------------------------------------------------
06: Download the source code    (ONLY NEEDS TO BE DONE ONCE PER RELEASE)
-------------------------------------------------------------------------------

	vi Makefile		(Set TVER to current version) 
	
	make get		Download source code from sourceforge:
	
				or get it from personal machine with:
				bwput -d /export/home/jeff/pkgs/tk/src \
					tk*-src.tar.gz

	make rename             rename the source file
	make unpack             unpack the source

-------------------------------------------------------------------------------
07: Update the copyright file   (ONLY NEEDS TO BE DONE ONCE PER RELEASE)
-------------------------------------------------------------------------------

	cd tk*[0-9]
	cp license.terms ${HOME}/pkgs/tk/copyright

-------------------------------------------------------------------------------
08: See if there are any source file modifications required for build
-------------------------------------------------------------------------------

        cd unix
	less -+e ../../../BUILD.NOTES 
	
	[update as required]

-------------------------------------------------------------------------------
09: Compile the software
-------------------------------------------------------------------------------

	make distclean
	../../CJSA.configure				# run configure
	script zzzz					# capture output
	make
	make test    [To run, must login for X11 session using:  ssh -X
		      This test run takes FOREVER over the ssh connection!
		      To run tests, I suggest compiling and testing on a
		      local system.]
	exit						# terminate script

-------------------------------------------------------------------------------
10: Review zzzz script file and update any required info in BUILD.NOTES file
-------------------------------------------------------------------------------

	vi zzzz  ../../BUILD.NOTES
	rm zzzz

-------------------------------------------------------------------------------
11: Install executable in a staging directory
-------------------------------------------------------------------------------

	rm -rf cswstage
	stagepkg INSTALL_ROOT=$PWD/cswstage install 

-------------------------------------------------------------------------------
12: Make symbolic link for wish    [**** USING PROPER VERSION NO. ****]
-------------------------------------------------------------------------------
	
	rm -f cswstage/opt/csw/bin/wish
	ls -l  cswstage/opt/csw/bin

	ln -s wish8.5 cswstage/opt/csw/bin/wish		# USE CORRECT VER. NO!

	ls -l  cswstage/opt/csw/bin
	ls -lL cswstage/opt/csw/bin

-------------------------------------------------------------------------------
13: Update the prototype file    (2nd build can use existing prototype file)
-------------------------------------------------------------------------------

	cd cswstage
	grep '^[df]' prototype | grep -v 'root bin'
	    [check 'f'iles & 'd'irs have owner/group 'root bin']
	vi prototype
	    [change all owners/groups to 'root bin']
	    [change file permissions from 0444 to 0644]
	    	:g/0444/s//0644/g
	    [change file permissions from 0555 to 0755]
	    	:g/0555/s//0755/g
	    [add following 's' line after 'f' line: ***CHECK VERSION NO.***]
	    	f none /opt/csw/bin/wish8.5 0755 root bin    [existing line]
	    	s none /opt/csw/bin/wish=wish8.5

-------------------------------------------------------------------------------
14: Edit the shipping tkConfig.sh file to set proper paths
-------------------------------------------------------------------------------

	vi opt/csw/lib/tkConfig.sh
	  :g#/export/home/jeff/pkgs/tk/src/tk[0-9.]*/unix#s##/opt/csw/lib#g
	  :g#/export/home/jeff/pkgs/tk/src/tk[0-9.]*#s##/opt/csw/src/tk#g
	  :wq

-------------------------------------------------------------------------------
15: Check changes in prototype from previous release and update file
-------------------------------------------------------------------------------

	diff ${HOME}/pkgs/tk/prototype prototype | less -+e
	    [if any odd differences, investigate and fix]

	cp prototype ${HOME}/pkgs/tk

-------------------------------------------------------------------------------
16: Create the package tk-*-SunOS5.8-{sparc,386i}-CSW.pkg.gz
-------------------------------------------------------------------------------

	cd ${HOME}/pkgs/tk
	createpkg -r ${HOME}/pkgs/tk/src/tk*[0-9]/unix/cswstage

	NOTE:	This may fail with:

		ERROR: cannot find package for libtcl8.5.so
		ERROR: failed check.

		When updating to a new major revision number (e.g., 8.4->8.5)
		since the current tcl package is not installed.  Just go
		ahead and finish packaging step by gzipping it up:

		gzip tk-*pkg

-------------------------------------------------------------------------------
17: Examine list of libraries used to see if any new CSW dependencies exist
-------------------------------------------------------------------------------

    *** Current dependencies are listed in the depend file ***

    If a new library is found, check package dependency:

	pkgchk -l -p /opt/csw/lib/lib<...>
   
    Add entry to the depend file:

        P	CSW<pkg>

    Now repeat step 11 and recreate the package

-------------------------------------------------------------------------------
18: Build other software for this hardware platform
-------------------------------------------------------------------------------

	Build CSWitcl package	(if necessary)
	Build CSWitk  package	(if necessary)
	Build CSWtclx package   (if applicable)

-------------------------------------------------------------------------------
19: Go back to TCL and build everything for the other hardware platform
------------------------------------------------------------------------------

	* Continue when all packages for Sparc & X86 platforms are ready

-------------------------------------------------------------------------------
20: Clean up
-------------------------------------------------------------------------------

		cd src
		make clean

-------------------------------------------------------------------------------
21: Copy the new package to the installation area
-------------------------------------------------------------------------------
	
	cd pkgs/tk
	cp  tk-*.pkg.gz  /export/medusa/newpkgs

-------------------------------------------------------------------------------
22: Copy the source code tarball to the holding area
-------------------------------------------------------------------------------

	cd src
	cp  TK.${VER}-src.tar.gz  /export/medusa/src/tk${VER}-src.tar.gz

-------------------------------------------------------------------------------
23: Notify package administrator
-------------------------------------------------------------------------------

	* Email phil@bolthole.com (Philip Brown) describing the update

------------------------------------------------------------------------------
