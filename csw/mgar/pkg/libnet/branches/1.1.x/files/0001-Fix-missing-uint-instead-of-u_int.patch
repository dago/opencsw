From 08bbc551da84a5cf9507dc3801a32d3092ea5e03 Mon Sep 17 00:00:00 2001
From: Dagobert Michelsen <dam@opencsw.org>
Date: Tue, 9 Nov 2010 13:15:42 +0100
Subject: [PATCH] Fix missing uint instead of u_int

---
 include/libnet/libnet-functions.h |    4 ++--
 src/libnet_build_icmp.c           |    6 +++---
 src/libnet_checksum.c             |    4 ++--
 3 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/include/libnet/libnet-functions.h b/include/libnet/libnet-functions.h
index ad70d12..eff534e 100644
--- a/include/libnet/libnet-functions.h
+++ b/include/libnet/libnet-functions.h
@@ -791,8 +791,8 @@ const uint8_t* payload, uint32_t payload_s, libnet_t *l, libnet_ptag_t ptag);
  * @return protocol tag value on success, -1 on error
  */
 libnet_ptag_t
-libnet_build_icmpv6_unreach(u_int8_t type, u_int8_t code, u_int16_t sum,
-u_int8_t *payload, u_int32_t payload_s, libnet_t *l, libnet_ptag_t ptag);
+libnet_build_icmpv6_unreach(uint8_t type, uint8_t code, uint16_t sum,
+uint8_t *payload, uint32_t payload_s, libnet_t *l, libnet_ptag_t ptag);
 
 /**
  * Builds an RFC 1112 Internet Group Memebership Protocol (IGMP) header.
diff --git a/src/libnet_build_icmp.c b/src/libnet_build_icmp.c
index 90a64bd..ee31d1a 100644
--- a/src/libnet_build_icmp.c
+++ b/src/libnet_build_icmp.c
@@ -397,10 +397,10 @@ bad:
 
 
 libnet_ptag_t
-libnet_build_icmpv6_unreach(u_int8_t type, u_int8_t code, u_int16_t sum,
-u_int8_t *payload, u_int32_t payload_s, libnet_t *l, libnet_ptag_t ptag)
+libnet_build_icmpv6_unreach(uint8_t type, uint8_t code, uint16_t sum,
+uint8_t *payload, uint32_t payload_s, libnet_t *l, libnet_ptag_t ptag)
 {
-    u_int32_t n, h;
+    uint32_t n, h;
     libnet_pblock_t *p;
     struct libnet_icmpv6_hdr icmp_hdr;
 
diff --git a/src/libnet_checksum.c b/src/libnet_checksum.c
index d2c25a5..07799ad 100644
--- a/src/libnet_checksum.c
+++ b/src/libnet_checksum.c
@@ -345,10 +345,10 @@ libnet_inet_checksum(libnet_t *l, uint8_t *iphdr, int protocol, int h_len, const
             icmph_p->icmp_sum = 0;
             if (is_ipv6)
             {
-                sum = libnet_in_cksum((u_int16_t *)&ip6h_p->ip_src, 32);
+                sum = libnet_in_cksum((uint16_t *)&ip6h_p->ip_src, 32);
                 sum += ntohs(IPPROTO_ICMP6 + h_len);
             }
-            sum += libnet_in_cksum((u_int16_t *)icmph_p, h_len);
+            sum += libnet_in_cksum((uint16_t *)icmph_p, h_len);
             icmph_p->icmp_sum = LIBNET_CKSUM_CARRY(sum);
             break;
         }
-- 
1.7.3

