From 4e383faed46df19cde2f83e83d60e7c6606487df Mon Sep 17 00:00:00 2001
From: Yann Rouillard <yann@pleiades.fr.eu.org>
Date: Mon, 1 Apr 2013 01:49:30 +0200
Subject: [PATCH] libpng15 compatibility fix

---
 htmldoc/image.cxx | 31 ++++++++++++++++++-------------
 1 file changed, 18 insertions(+), 13 deletions(-)

diff --git a/htmldoc/image.cxx b/htmldoc/image.cxx
index 574ff7c..22ed300 100644
--- a/htmldoc/image.cxx
+++ b/htmldoc/image.cxx
@@ -1472,6 +1472,9 @@ image_load_png(image_t *img,	/* I - Image pointer */
   png_bytep	*rows;		/* PNG row pointers */
   uchar		*inptr,		/* Input pixels */
 		*outptr;	/* Output pixels */
+  png_bytep     trans_alpha; 
+  int           num_trans; 
+  png_color_16p trans_color;
 
 
  /*
@@ -1499,7 +1502,7 @@ image_load_png(image_t *img,	/* I - Image pointer */
 
   rows = NULL;
 
-  if (setjmp(pp->jmpbuf)) 
+  if (setjmp(png_jmpbuf(pp))) 
   {
     progress_error(HD_ERROR_BAD_FORMAT, "PNG file contains errors!");
 
@@ -1526,7 +1529,9 @@ image_load_png(image_t *img,	/* I - Image pointer */
 
   png_read_info(pp, info);
 
-  if (info->color_type & PNG_COLOR_MASK_PALETTE)
+  png_get_tRNS(pp, info, &trans_alpha, &num_trans, &trans_color);
+
+  if (png_get_color_type(pp, info) & PNG_COLOR_MASK_PALETTE)
   {
     png_set_expand(pp);
 
@@ -1535,15 +1540,15 @@ image_load_png(image_t *img,	/* I - Image pointer */
     if (Encryption)
       img->use ++;
   }
-  else if (info->bit_depth < 8)
+  else if (png_get_bit_depth(pp, info) < 8)
   {
     png_set_packing(pp);
     png_set_expand(pp);
   }
-  else if (info->bit_depth == 16)
+  else if (png_get_bit_depth(pp, info) == 16)
     png_set_strip_16(pp);
 
-  if (info->color_type & PNG_COLOR_MASK_COLOR)
+  if (png_get_color_type(pp, info) & PNG_COLOR_MASK_COLOR)
   {
     depth      = 3;
     img->depth = gray ? 1 : 3;
@@ -1554,10 +1559,10 @@ image_load_png(image_t *img,	/* I - Image pointer */
     img->depth = 1;
   }
 
-  img->width  = info->width;
-  img->height = info->height;
+  img->width  = png_get_image_width(pp, info);
+  img->height = png_get_image_height(pp, info);
 
-  if ((info->color_type & PNG_COLOR_MASK_ALPHA) || info->num_trans)
+  if ((png_get_color_type(pp, info) & PNG_COLOR_MASK_ALPHA) || num_trans)
   {
     if ((PSLevel == 0 && PDFVersion >= 14) || PSLevel == 3)
       image_need_mask(img, 8);
@@ -1576,7 +1581,7 @@ image_load_png(image_t *img,	/* I - Image pointer */
     puts("    COLOR");
   else
     puts("    GRAYSCALE");
-  if ((info->color_type & PNG_COLOR_MASK_ALPHA) || info->num_trans)
+  if ((info->color_type & PNG_COLOR_MASK_ALPHA) || num_trans)
     puts("    ALPHA");
   if (info->color_type & PNG_COLOR_MASK_PALETTE)
     puts("    PALETTE");
@@ -1594,9 +1599,9 @@ image_load_png(image_t *img,	/* I - Image pointer */
   * Allocate pointers...
   */
 
-  rows = (png_bytep *)calloc(info->height, sizeof(png_bytep));
+  rows = (png_bytep *)calloc(png_get_image_height(pp, info), sizeof(png_bytep));
 
-  for (i = 0; i < (int)info->height; i ++)
+  for (i = 0; i < (int)png_get_image_height(pp, info); i ++)
     rows[i] = img->pixels + i * img->width * depth;
 
  /*
@@ -1610,7 +1615,7 @@ image_load_png(image_t *img,	/* I - Image pointer */
   * Generate the alpha mask as necessary...
   */
 
-  if ((info->color_type & PNG_COLOR_MASK_ALPHA) || info->num_trans)
+  if ((png_get_color_type(pp, info) & PNG_COLOR_MASK_ALPHA) || num_trans)
   {
 #ifdef DEBUG
     for (inptr = img->pixels, i = 0; i < img->height; i ++)
@@ -1639,7 +1644,7 @@ image_load_png(image_t *img,	/* I - Image pointer */
   * Reformat the data as necessary for the reader...
   */
 
-  if (gray && info->color_type & PNG_COLOR_MASK_COLOR)
+  if (gray && png_get_color_type(pp, info) & PNG_COLOR_MASK_COLOR)
   {
    /*
     * Greyscale output needed...
-- 
1.8.1.4

