From aedbeea97cf8e986d7c05a76cf0d613886e3bdd5 Mon Sep 17 00:00:00 2001
From: Peter Felecan <pfelecan@opencsw.org>
Date: Thu, 29 Aug 2013 11:20:50 +0200
Subject: [PATCH] endianness and byte order

again some linuxisms
---
 src/unrar/os.hpp | 21 +++++++++++++++++++--
 1 file changed, 19 insertions(+), 2 deletions(-)

diff --git a/src/unrar/os.hpp b/src/unrar/os.hpp
index 21488a8..29fccbe 100644
--- a/src/unrar/os.hpp
+++ b/src/unrar/os.hpp
@@ -214,6 +214,23 @@
 
 #endif
 
+#if defined(__GNUC__)
+/* all the above is quite bullshit as the GCC defines these values */
+#if defined(BYTE_ORDER)
+#undef BYTE_ORDER
+#endif /* : defined(BYTE_ORDER) */
+#define BYTE_ORDER __BYTE_ORDER__
+#if defined(LITTLE_ENDIAN)
+#undef LITTLE_ENDIAN
+#endif /* : defined(LITTLE_ENDIAN) */
+#define LITTLE_ENDIAN __ORDER_LITTLE_ENDIAN__
+#if defined(BIG_ENDIAN)
+#undef BIG_ENDIAN
+#endif /* : defined(BIG_ENDIAN) */
+#define BIG_ENDIAN __ORDER_BIG_ENDIAN__
+/* I don't care about __ORDER_PDP_ENDIAN__ */
+#endif /* : defined(__GNUC__) */
+
   typedef const char* MSGID;
 
 #define safebuf static
@@ -221,9 +238,9 @@
 #if !defined(LITTLE_ENDIAN) && !defined(BIG_ENDIAN)
   #if defined(__i386) || defined(i386) || defined(__i386__)
     #define LITTLE_ENDIAN
-  #elif defined(BYTE_ORDER) && BYTE_ORDER == LITTLE_ENDIAN
+#elif defined(BYTE_ORDER) && BYTE_ORDER == LITTLE_ENDIAN
     #define LITTLE_ENDIAN
-  #elif defined(BYTE_ORDER) && BYTE_ORDER == BIG_ENDIAN
+#elif defined(BYTE_ORDER) && BYTE_ORDER == BIG_ENDIAN
     #define BIG_ENDIAN
   #else
     #error "Neither LITTLE_ENDIAN nor BIG_ENDIAN are defined. Define one of them."
-- 
1.8.3.4

