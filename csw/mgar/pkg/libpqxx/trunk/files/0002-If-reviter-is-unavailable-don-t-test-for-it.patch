From 550d0970eb6dafc0e153b58bb471a382c9b84731 Mon Sep 17 00:00:00 2001
From: Maciej Blizinski <maciej@opencsw.org>
Date: Sun, 6 May 2012 09:38:50 +0200
Subject: [PATCH 3/3] If reviter is unavailable, don't test for it

---
 test/unit/test_binarystring.cxx |    6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/test/unit/test_binarystring.cxx b/test/unit/test_binarystring.cxx
index 1c911d6..1df104a 100644
--- a/test/unit/test_binarystring.cxx
+++ b/test/unit/test_binarystring.cxx
@@ -20,7 +20,9 @@ void test_binarystring(transaction_base &T)
   PQXX_CHECK_EQUAL(b.size(), 0u, "Empty binarystring has nonzero size.");
   PQXX_CHECK_EQUAL(b.length(), 0u, "Length/size mismatch.");
   PQXX_CHECK(b.begin() == b.end(), "Empty binarystring iterates.");
+#ifdef PQXX_HAVE_REVERSE_ITERATOR
   PQXX_CHECK(b.rbegin() == b.rend(), "Empty binarystring reverse-iterates.");
+#endif
   PQXX_CHECK_THROWS(b.at(0), out_of_range, "Empty binarystring accepts at().");
 
   b = make_binarystring(T, "z");
@@ -29,11 +31,15 @@ void test_binarystring(transaction_base &T)
   PQXX_CHECK_EQUAL(b.size(), 1u, "Bad binarystring size.");
   PQXX_CHECK_EQUAL(b.length(), 1u, "Length/size mismatch.");
   PQXX_CHECK(b.begin() != b.end(), "Nonempty binarystring does not iterate.");
+#ifdef PQXX_HAVE_REVERSE_ITERATOR
   PQXX_CHECK(
 	b.rbegin() != b.rend(),
 	 "Nonempty binarystring does not reverse-iterate.");
+#endif
   PQXX_CHECK(b.begin() + 1 == b.end(), "Bad iteration.");
+#ifdef PQXX_HAVE_REVERSE_ITERATOR
   PQXX_CHECK(b.rbegin() + 1 == b.rend(), "Bad reverse iteration.");
+#endif
   PQXX_CHECK(b.front() == 'z', "Unexpected front().");
   PQXX_CHECK(b.back() == 'z', "Unexpected back().");
   PQXX_CHECK(b.at(0) == 'z', "Unexpected data at index 0.");
-- 
1.7.10

