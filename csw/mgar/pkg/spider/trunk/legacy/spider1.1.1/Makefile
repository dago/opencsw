# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.89 94/08/12 00:45:51 gildea Exp $

# -----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.219 94/05/13 15:58:31 matt Exp $
# $SunSoft: @(#)Imake.tmpl	1.1 01/13/97 16:16:22 $
#

# **************************************************************************
# NOTE:
#
# If the user does not define DESTDIR and/or BINDIR in the local Imakefile,
# 'make install' will install the resultant binaries in /usr/openwin/bin.
# This usually fails because of lack of write permission in that directory
# for non-root users.
#
# The reason is that the default definition of ProjectRoot is /usr/openwin.
# This value determines all other definitions, e.g. the binary, library and
# manual page directories, etc.  The destination directory, DESTDIR, is not
# defined and BINDIR is defined as $(ProjectRoot)/bin in Project.tmpl.
#
# Care must be taken when changing ProjectRoot.  It affects the inclusion
# path of 'imake' in finding the *.cf, *.def, *.tmpl and *.rules files,
# which are in /usr/openwin/lib/X11/config/, and the default inclusion path
# of X11 header files and libraries. Therefore, if ProjectRoot is changed
# not only these configuration files need to be copied to a proper location,
# defined by IRULESRC, so 'make Makefile' can work properly, the header file
# inclusion path, /usr/openwin/include, and the library search path,
# /usr/openwin/lib, also need to be defined properly either in the local
# Imakefile or one of the configuration files to avoid compilation errors
# for programs that use X11 header files or libraries.
#
# Please refer to Project.tmpl, Imake.tmpl, site.def, etc. in
# /usr/openwin/lib/X11/config/ for details.
# **************************************************************************

.SUFFIXES: .i

# $XConsortium: Imake.cf,v 1.12 94/03/29 15:42:08 gildea Exp $
# $SunSoft: @(#)Imake.cf	1.1 01/13/97 16:16:21 $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.11 94/06/03 19:50:12 matt Exp $
# site:  $SunSoft: @(#)site.def	1.1 01/13/97 16:16:27$

# -----------------------------------------------------------------------
# platform-specific configuration parameters - edit sun.cf to change

# platform:  $XConsortium: sun.cf,v 1.133 94/07/08 12:23:12 gildea Exp $
# platform:  $SunSoft: @(#)sun.cf	1.11 05/04/01 13:49:33 $

# operating system:  SunOS 5.9

# SUNSOFT SUNSOFT_LOADABLE

# $XConsortium: svr4.cf,v 1.6 94/04/08 18:56:33 rws Exp $
# $SunSoft: @(#)svr4.cf	1.1 01/13/97 16:16:29 $

# $XConsortium: sv4Lib.rules,v 1.14 94/04/09 12:00:10 rws Exp $
# $SunSoft: @(#)sv4Lib.rules	1.1 01/13/97 16:16:28 $

# SUNSOFT SUNSOFT_LOADABLE

	TROFFTOPS = /usr/lib/lp/postscript/dpost | /usr/lib/lp/postscript/postreverse -r

# -----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.11 94/06/03 19:50:12 matt Exp $
# site:  $SunSoft: @(#)site.def	1.1 01/13/97 16:16:27$

INSTALLFLAGS  = -o bin -g bin -m 0644

USRINCLUDEDIR = /usr/local/C/include
USRINCDIR     = /usr/local/C/include

APPDEFDIR     = /usr/local/X11/lib/app-defaults
APPDEFDIR1    = /usr/openwin/lib/app-defaults
APPDEFDIR2    = /usr/dt/app-defaults/C

# -----------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.193 94/04/10 17:39:55 rws Exp $
# rules:  $SunSoft: @(#)Imake.rules	1.1 01/13/97 16:16:21 $

# SUNSOFT SUNSOFT_LOADABLE

          PATHSEP = /
            SHELL = /bin/sh

              TOP = .
      CURRENT_DIR = .

            IMAKE = imake
           DEPEND = makedepend
        MKDIRHIER = mkdirhier
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend
           IXXSRC = $(UNSUPPORTEDSRC)/programs/ixx
              IXX = ixx
         IXXFLAGS = -s BaseObject -m TypeObj -r RequestObj -p Xf
      IXXINCLUDES = -i '<X11/Fresco/enter-scope.h>'

          INCROOT = /usr/openwin/include
        USRLIBDIR = /usr/local/C/lib
         SHLIBDIR = /usr/local/C/lib
       LINTLIBDIR = $(USRLIBDIR)
          MANPATH = /usr/local/X11/man
    MANSOURCEPATH = /usr/local/X11/man/man
           MANDIR = $(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
       FILEMANDIR = $(MANSOURCEPATH)$(FILEMANSUFFIX)

               AR = /usr/ccs/bin/ar cq
  BOOTSTRAPCFLAGS = -DSVR4
               CC = gcc -fpcc-struct-return
               AS = /usr/ccs/bin/as

         COMPRESS = compress
              CPP = /usr/ccs/lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -fpcc-struct-return -E $(STD_CPP_DEFINES)
          INSTALL = /usr/local/bin/install
     INSTALLFLAGS = -c
               LD = /usr/ccs/bin/ld
              LEX = /usr/ccs/bin/lex
           LEXLIB = -ll
             YACC = /usr/ccs/bin/yacc
           CCYACC = /usr/ccs/bin/yacc
             LINT = lint
      LINTLIBFLAG = -y -o
         LINTOPTS = -b -h -Xc
               LN = ln -s
             MAKE = /usr/ccs/bin/make
               MV = mv
               CP = cp

               RM = rm -f
        MANSUFFIX = 1
     LIBMANSUFFIX = 3
    FILEMANSUFFIX = 4
            TROFF = troff -t -Tpost
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES = -I/usr/local/C/include -I/usr/sfw/include -I/opt/csw/include -I/opt/sfw/include
  STD_CPP_DEFINES = -Dsun -Dsparc -DSVR4 -DSYSV
      STD_DEFINES = -Dsun -Dsparc -DSVR4 -DSYSV
 EXTRA_LOAD_FLAGS = -L/usr/local/C/lib -R/usr/local/C/lib -L/usr/sfw/lib -R/usr/sfw/lib -L/opt/csw/lib -R/opt/csw/lib -L/opt/sfw/lib -R/opt/sfw/lib
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES = -lsocket -lnsl
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

     SHLIBLDFLAGS = -G -z text -M mapfile

         PICFLAGS = -fpic

      CXXPICFLAGS = -K PIC

    PROTO_DEFINES =

     INSTPGMFLAGS = -s -o bin -g bin -m 0755

     INSTBINFLAGS = -s -o bin -g bin -m 0755
     INSTUIDFLAGS = -o bin -g bin -m 04755
     INSTLIBFLAGS = -o bin -g bin -m 0644
     INSTINCFLAGS = -o bin -g bin -m 0644
     INSTMANFLAGS = -o bin -g bin -m 0644
     INSTDATFLAGS = -o bin -g bin -m 0644
    INSTKMEMFLAGS = -o bin -g kmem -m 02755

      PROJECTROOT = /usr/openwin

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(USRLIBDIR)
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

           LDLIBS = $(LDPOSTLIB) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

       CCENVSETUP = LD_RUN_PATH=$(USRLIBDIR)
           CCLINK = $(CCENVSETUP) $(CC)

      CXXENVSETUP = LD_RUN_PATH=$(USRLIBDIR)
          CXXLINK = $(CXXENVSETUP) $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = sun.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Project.tmpl \
			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) \
			 $(EXTRA_ICONFIGFILES)

# -----------------------------------------------------------------------
# X Window System Build Parameters and Rules
# $XConsortium: Project.tmpl,v 1.242 94/04/13 14:58:40 rws Exp $
# $SunSoft: @(#)Project.tmpl	1.6 05/30/02 19:12:02 $

# SUNSOFT SUNSOFT_LOADABLE

# -----------------------------------------------------------------------
# X Window System make variables; these need to be coordinated with rules

           BINDIR = /usr/local/X11/bin
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
      BUILDLIBDIR = $(TOP)/usrlib
      BUILDLIBTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = /usr/local/X11/lib

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
           NLSDIR = $(LIBDIR)/nls
       XLOCALEDIR = $(PROJECTROOT)/lib/locale
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

              RGB = rgb
            FONTC = bdftopcf
        MKFONTDIR = mkfontdir

       DOCUTILSRC = $(TOP)/doc/util
       XDOCMACROS = $(DOCUTILSRC)/macros.t
       XIDXMACROS = $(DOCUTILSRC)/indexmacros.t
       PROGRAMSRC = $(TOP)/programs
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/programs/Xserver
       CONTRIBSRC = $(TOP)/../contrib
   UNSUPPORTEDSRC = $(TOP)/unsupported
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/programs/rgb
      BDFTOPCFSRC = $(PROGRAMSRC)/bdftopcf
     MKFONTDIRSRC = $(PROGRAMSRC)/mkfontdir
    FONTSERVERSRC = $(PROGRAMSRC)/xfs
       FONTINCSRC = $(TOP)/include/fonts
        EXTINCSRC = $(TOP)/include/extensions
     TRANSCOMMSRC = $(LIBSRC)/xtrans
   TRANS_INCLUDES = -I$(TRANSCOMMSRC)

# $XConsortium: sunLib.tmpl,v 1.37 95/05/23 14:31:40 matt Exp $
# SunSoft: @(#)sunLib.tmpl	1.4 05/30/02 17:00:20

# $XConsortium: sv4Lib.tmpl,v 1.19 93/12/03 10:48:36 kaleb Exp $
# $SunSoft: @(#)sv4Lib.tmpl	1.1 01/13/97 16:16:29 $

XMULIBONLY = -lXmu -lm
XMULIB = -lXmu -lm

       SERVERLIB = /usr/openwin/server/lib

	SERVERMODULES = /usr/openwin/server/modules

	SERVERETC = /usr/openwin/server/etc

SHLIBLDFLAGS = -G -z text -M mapfile
PICFLAGS = -fpic
MAPFILE = mapfile

          XLIBSRC = $(LIBSRC)/X11

SOXLIBREV = 4
DEPXONLYLIB =
XONLYLIB =  -lX11

LINTXONLY = $(LINTLIBDIR)/llib-lX11.ln

         XLIBONLY = $(XONLYLIB)

      XEXTLIBSRC = $(LIBSRC)/Xext

SOXEXTREV = 0
DEPEXTENSIONLIB =
EXTENSIONLIB =  -lXext

LINTEXTENSION = $(LINTLIBDIR)/llib-lXext.ln

LINTEXTENSIONLIB = $(LINTEXTENSION)
          DEPXLIB = $(DEPEXTENSIONLIB) $(DEPXONLYLIB)
             XLIB = $(EXTENSIONLIB) $(XONLYLIB)
         LINTXLIB = $(LINTXONLYLIB)

         XAUTHSRC = $(LIBSRC)/Xau

DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
XAUTHLIB =  -lXau

LINTXAUTH = $(LINTLIBDIR)/llib-lXau.ln

      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
XDMCPLIB =  -lXdmcp

LINTXDMCP = $(LINTLIBDIR)/llib-lXdmcp.ln

           XMUSRC = $(LIBSRC)/Xmu

SOXMUREV = 4
DEPXMULIB =
XMULIB =  -lXmu

LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln

XMULIB =  -lXmu -lm

          XCONFIGSRC = $(LIBSRC)/Xconfig

SOXCONFIGREV = 0
DEPXCONFIGLIB =
XCONFIGLIB =  -lXconfig

LINTXCONFIG = $(LINTLIBDIR)/llib-lXconfig.ln

          DGASRC = $(LIBSRC)/dga

SODGAREV = 1
DEPDGASRCLIB =
DGASRCLIB =  -ldga

LINTDGASRC = $(LINTLIBDIR)/llib-ldga.ln

          MISRC = $(SERVERSRC)/mi

SOMIREV = 1
DEPMILIB =
MILIB =  -lmi

LINTMI = $(LINTLIBDIR)/llib-lmi.ln

          MFBSRC = $(SERVERSRC)/mfb

SOMFBREV = 1
DEPMFBLIB =
MFBLIB =  -lmfb

LINTMFB = $(LINTLIBDIR)/llib-lmfb.ln

          CFBSRC = $(SERVERSRC)/cfb

SOCFBREV = 1
DEPCFBLIB =
CFBLIB =  -lcfb

LINTCFB = $(LINTLIBDIR)/llib-lcfb.ln

       OLDXLIBSRC = $(LIBSRC)/oldX

SOOLDXREV = 6
DEPOLDXLIB =
OLDXLIB =  -loldX

LINTOLDX = $(LINTLIBDIR)/llib-loldX.ln

       TOOLKITSRC = $(LIBSRC)/Xt

SOXTREV = 4
DEPXTOOLONLYLIB =
XTOOLONLYLIB =  -lXt

LINTXTOOLONLY = $(LINTLIBDIR)/llib-lXt.ln

      DEPXTOOLLIB = $(DEPXTOOLONLYLIB) $(DEPSMLIB) $(DEPICELIB)
         XTOOLLIB = $(XTOOLONLYLIB) $(SMLIB) $(ICELIB)
     LINTXTOOLLIB = $(LINTXTOOLONLYLIB)

       AWIDGETSRC = $(LIBSRC)/Xaw

SOXAWREV = 5
DEPXAWLIB =
XAWLIB =  -lXaw

LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln

       XTFSRC = $(TOP)/workInProgress/Xtf

SOXTFREV = 0.7
DEPXTFLIB =
XTFLIB =  -lXtf

LINTXTF = $(LINTLIBDIR)/llib-lXtf.ln

       FRESCOSRC = $(TOP)/workInProgress/Fresco

SOFRESCOREV = 0.7
DEPFRESCOLIB =
FRESCOLIB =  -lFresco

LINTFRESCO = $(LINTLIBDIR)/llib-lFresco.ln

         XILIBSRC = $(LIBSRC)/Xi

SOXINPUTREV = 5
DEPXILIB =
XILIB =  -lXi

LINTXI = $(LINTLIBDIR)/llib-lXi.ln

      XTESTLIBSRC = $(LIBSRC)/Xtst

SOXTESTREV = 1
DEPXTESTLIB =
XTESTLIB =  -lXtst

LINTXTEST = $(LINTLIBDIR)/llib-lXtst.ln

        PEXLIBSRC = $(LIBSRC)/PEX5

SOPEXREV = 6
DEPPEXLIB =
PEXLIB =  -lPEX5

LINTPEX = $(LINTLIBDIR)/llib-lPEX5.ln

SODPSREV = 5
SOSERVERDPSREV = 5

        DPSLIBSRC = $(LIBSRC)/DPS

SODPSREV = 5
DEPDPSLIB =
DPSLIB =  -lDPS

LINTDPS = $(LINTLIBDIR)/llib-lDPS.ln

        XIELIBSRC = $(LIBSRC)/XIE

SOXIEREV = 6
DEPXIELIB =
XIELIB =  -lXIE

LINTXIE = $(LINTLIBDIR)/llib-lXIE.ln

      PHIGSLIBSRC = $(LIBSRC)/PHIGS

DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
PHIGSLIB =  -lphigs

LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
XBSDLIB =  -lXbsd

LINTXBSD = $(LINTLIBDIR)/llib-lXbsd.ln

           ICESRC = $(LIBSRC)/ICE

SOICEREV = 6
DEPICELIB =
ICELIB =  -lICE

LINTICE = $(LINTLIBDIR)/llib-lICE.ln

            SMSRC = $(LIBSRC)/SM

SOSMREV = 6
DEPSMLIB =
SMLIB =  -lSM

LINTSM = $(LINTLIBDIR)/llib-lSM.ln

         FSLIBSRC = $(LIBSRC)/FS

SOFSREV = 5
DEPFSLIB =
FSLIB =  -lFS

LINTFS = $(LINTLIBDIR)/llib-lFS.ln

         FONTLIBSRC = $(LIBSRC)/font

DEPFONTLIB = $(USRLIBDIR)/libfont.a
FONTLIB =  -lfont

LINTFONT = $(LINTLIBDIR)/llib-lfont.ln

    XRENDERLIBSRC = $(LIBSRC)/Xrender

SOXRENDERREV = 1
DEPXRENDERLIB =
XRENDERLIB =  -lXrender

LINTXRENDER = $(LINTLIBDIR)/llib-lXrender.ln

XRENDERLIB = -L/usr/openwin/sfw/lib -R/usr/openwin/lib:/usr/openwin/sfw/lib -lXrender

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

        CONFIGDIR = $(LIBDIR)/config

# -----------------------------------------------------------------------
# start of Imakefile

# Run imake -DUseInstalled -I/usr/lib/X11/config to make a Makefile.
# This is an R4 style Imakefile, so will need the R4 config files to
# to make a Makefile.  It also assume that X11 is installed in /usr/lib.

        SHAR = shar -a
        COMPRESS = compress
        BTOA = btoa
        SPLIT = split
        CAT = cat

        HELPDIR = /usr/local/Games/lib/spider

        MANSUFFIX = 6
        MANDIR = /usr/local/Games/man/man$(MANSUFFIX)
        BINDIR = /usr/local/Games/bin
        MKDIRHIER = /usr/openwin/bin/mkdirhier

        KL_DIST = main.c

        XVIEW_DIST = xv_ui.c xv_stubs.c xv_ui.h spider.info

        XAW_DIST = xaw_ui.c xaw_stubs.c xaw_ui.h

        DEPLIBS = $(DEPXAWLIB) $(DEPXTOOLLIB) $(DEPXMULIB) $(DEPXLIB)
        LOCAL_LIBRARIES = $(XAWLIB) $(XTOOLLIB) $(XMULIB) $(XLIB)

        TKOBJS = xaw_ui.o xaw_stubs.o

        TKSRCS = xaw_ui.c xaw_stubs.c

        TKHEADERS = xaw_ui.h

        TKBITMAPS =

        TKDOCS =

        TKDEFINES = -DXAW

        TKINCLUDES =

        TARGET = spider

BASE_OBJS = gfx.o spider.o events.o windows.o movelog.o util.o version.o
OBJS = $(BASE_OBJS) $(TKOBJS)

BASE_SRCS = gfx.c spider.c events.c windows.c movelog.c util.c version.c
SRCS =  $(BASE_SRCS) $(TKSRCS)

BASE_HEADERS = globals.h defs.h assert.h
HEADERS = $(BASE_HEADERS) $(TKHEADERS)

BASE_BITMAPS = rank.bm suit.bm face.bm spider.bm cards.bm.aa cards.bm.ab
BITMAPS = $(BASE_BITMAPS) $(TKBITMAPS)

BASE_DOCS = doc.intro doc.rules doc.controls doc.examples doc.misc doc.summary
DOCS =        $(BASE_DOCS) $(TKDOCS)

MISC = Imakefile Makefile.sunpro README spider.man

ALL_SRCS = $(MISC) $(BASE_SRCS) $(BASE_HEADERS) $(BASE_BITMAPS) $(BASE_DOCS) \
        $(XVIEW_DIST) $(XAW_DIST) $(KL_DIST)

UTILDEFS =

DEFINES = $(TKDEFINES) -DROUND_CARDS -DHELPDIR="\"$(HELPDIR)\"" $(UTILDEFS)

INCLUDES = -I. $(TKINCLUDES)

CPPFLAGS =

all:: $(TARGET)

install::
	@case '${MFLAGS}' in *[i]*) set +e;; esac;
	@for i in $(BINDIR); do if [ -d $(DESTDIR)$$i ]; then \
	set +x; else (set -x; $(MKDIRHIER) $(DESTDIR)$$i); fi \
	done

install.man::
	@case '${MFLAGS}' in *[i]*) set +e;; esac;
	@for i in  $(MANDIR); do if [ -d $(DESTDIR)$$i ]; then \
	set +x; else (set -x; $(MKDIRHIER) $(DESTDIR)$$i); fi \
	done

 PROGRAM = $(TARGET)

all:: $(TARGET)

$(TARGET): $(OBJS) $(DEPLIBS)
	$(RM) $@
	$(CCLINK) -o $@ $(LDOPTIONS) $(OBJS) $(LOCAL_LIBRARIES) $(LDLIBS)  $(EXTRA_LOAD_FLAGS)

install:: $(TARGET)
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  $(TARGET) $(DESTDIR)$(BINDIR)/$(TARGET)

install.man:: $(TARGET).man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	instman -$(MANSUFFIX) -M $(MANDIR) -N $(TARGET) $(TARGET).man

depend::
	$(DEPEND) $(DEPENDFLAGS) -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

clean::
	$(RM) $(TARGET)

# SunOS4.0.3 sparc optimizer slimes this file
util.o:	util.c
	$(CC) $(CPPFLAGS) $(DEFINES) $(INCLUDES) -c util.c

version.o:	version.c
	$(CC) -DDATE="\"`date`\"" -c version.c

install.doc::
	@case '${MFLAGS}' in *[i]*) set +e;; esac;
	@for i in $(HELPDIR); do if [ -d $(DESTDIR)$$i ]; then \
	set +x; else (set -x; $(MKDIRHIER) $(DESTDIR)$$i); fi \
	done

install.doc:: $(DOCS)
	@if [ -d $(DESTDIR)$(HELPDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(HELPDIR)); fi
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(DOCS); do \
	(set -x; $(INSTALL) $(INSTALLFLAGS) $(INSTDATFLAGS) $$i $(DESTDIR)$(HELPDIR)); \
	done

World::
	@echo ""
	@echo "Begin build of the $(TARGET) application for the"

	@echo "Athena Widget toolkit version."

	@echo "Using cards with normal bitmaps and optional rounded edges."

	@echo ""
	@date
	@echo ""
	$(MAKE) $(MFLAGS) clean
	$(MAKE) $(MFLAGS) depend
	$(MAKE) $(MFLAGS)
	@echo ""
	@date
	@echo ""
	@echo "Begin installation... "
	$(MAKE) $(MFLAGS) -k install
	$(MAKE) $(MFLAGS) -k install.doc
	$(MAKE) $(MFLAGS) -k install.man
	@echo ""
	@date
	@echo ""
	@echo "Installation complete...now type 'make clean'"

clean::
	$(RM) spider.shar spider.a spider.a.a?a cards.bm

shar::
	$(SHAR) $(ALL_SRCS) > spider.shar

dist::	shar
	$(RM) spider.shar.Z
	$(COMPRESS) spider.shar
	$(CAT) spider.shar.Z | $(BTOA) > spider.a
	$(SPLIT) spider.a spider.a.

# -----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut   "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

man_keywords::
	catman -M $(DESTDIR)$(MANPATH) -w

# ----------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

depend::

# -----------------------------------------------------------------------
# dependencies generated by makedepend

