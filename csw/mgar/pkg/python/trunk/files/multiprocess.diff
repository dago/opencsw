--- Python-2.6.1/Modules/_multiprocessing/multiprocessing.h	2008-11-04 14:43:31.000000000 -0600
+++ ./multiprocessing.h	2009-02-08 11:44:33.901496225 -0600
@@ -39,6 +39,20 @@
 #endif
 
 /*
+ * Solaris 8 missing CMSG_SPACE and CMSG_LEN
+ */
+#ifndef CMSG_SPACE
+#  define CMSG_SPACE(l)       (_CMSG_DATA_ALIGN(sizeof(struct cmsghdr)) + \
+                                      _CMSG_HDR_ALIGN(l))
+#  warning "assuming 4-byte alignment for CMSG_SPACE"
+#endif  /* CMSG_SPACE */
+
+#ifndef CMSG_LEN
+#  define CMSG_LEN(l)         (_CMSG_DATA_ALIGN(sizeof(struct cmsghdr)) + (l))
+#  warning "assuming 4-byte alignment for CMSG_LEN"
+#endif /* CMSG_LEN */
+
+/*
  * Issue 3110 - Solaris does not define SEM_VALUE_MAX
  */
 #ifndef SEM_VALUE_MAX
Index: Python-2.6.2/Modules/_multiprocessing/multiprocessing.h
===================================================================
--- Python-2.6.2/Modules/_multiprocessing/multiprocessing.h  (revision 66181)
+++ Python-2.6.2/Modules/_multiprocessing/multiprocessing.h  (working copy)
@@ -37,6 +37,17 @@
 #endif
 
 /*
+ * Issue 3110 - Solaris does not define SEM_VALUE_MAX
+ */
+#ifndef SEM_VALUE_MAX
+#  ifdef _SEM_VALUE_MAX
+#    define SEM_VALUE_MAX _SEM_VALUE_MAX
+#  else
+#    define SEM_VALUE_MAX INT_MAX
+#  endif
+#endif
+
+/*
  * Make sure Py_ssize_t available
  */

Index: setup.diff
===================================================================
--- setup.diff  (revision 5088)
+++ setup.diff  (working copy)
@@ -1,111 +0,0 @@
--- Python-2.6.1/setup.py      2008-11-04 14:43:31.000000000 -0600
+++ ./setup.py 2009-02-08 18:25:38.412651662 -0600
@@ -309,9 +310,9 @@
         return sys.platform

     def detect_modules(self):
-        # Ensure that /usr/local is always used
-        add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
-        add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
+        # Ensure that /opt/csw is always used
+        add_dir_to_list(self.compiler.library_dirs, '/opt/csw/lib')
+        add_dir_to_list(self.compiler.include_dirs, '/opt/csw/include')

         # Add paths specified in the environment variables LDFLAGS and
         # CPPFLAGS for header and library files.
@@ -988,7 +944,7 @@
         # we do not build this one.  Otherwise this build will pick up
         # the more recent berkeleydb's db.h file first in the include path
         # when attempting to compile and it will fail.
-        f = "/usr/include/db.h"
+        f = "/opt/csw/include/db_185.h"
         if os.path.exists(f) and not db_incs:
             data = open(f).read()
             m = re.search(r"#s*define\s+HASHVERSION\s+2\s*", data)
@@ -1279,6 +1236,14 @@
                 )
             libraries = []

+        elif platform == 'sunos5':
+            macros = dict(                  # Solaris
+                HAVE_SEM_OPEN=0,            # Not implemented
+                HAVE_SEM_TIMEDWAIT=0,       # Not implemented
+                HAVE_FD_TRANSFER=1,
+                )
+            libraries = ['rt']
+
         else:                                   # Linux and other unices
             macros = dict(
                 HAVE_SEM_OPEN=1,


