From c8297f1d1b8d35e75932c9a43060b8dabb7afc54 Mon Sep 17 00:00:00 2001
From: Juergen Arndt <ja@opencsw.org>
Date: Sat, 28 Jul 2012 08:25:46 +0200
Subject: [PATCH 6/6] paths in Makefile.config

---
 Makefile.config |   38 +++++++++++++++++++-------------------
 1 file changed, 19 insertions(+), 19 deletions(-)

diff --git a/Makefile.config b/Makefile.config
index 5bb6d18..7abbec8 100644
--- a/Makefile.config
+++ b/Makefile.config
@@ -17,10 +17,10 @@
 #
 # the base of the Munin installation.
 #
-PREFIX     = $(DESTDIR)/opt/munin
+PREFIX     = /opt/csw
 
 # Where Munin keeps its configurations (server.conf, client.conf, ++)
-CONFDIR    = $(DESTDIR)/etc/opt/munin
+CONFDIR    = /etc/opt/csw/munin
 
 # Server only - where to put munin-cron
 BINDIR     = $(PREFIX)/bin
@@ -29,20 +29,20 @@ BINDIR     = $(PREFIX)/bin
 SBINDIR    = $(PREFIX)/sbin
 
 # Where to put text and html documentation
-DOCDIR     = $(PREFIX)/doc
+DOCDIR     = $(PREFIX)/share/doc/munin
 
 # Where to put man pages
-MANDIR     = $(PREFIX)/man
+MANDIR     = $(PREFIX)/share/man
 
 # Where to put internal binaries and plugin repository
-LIBDIR     = $(PREFIX)/lib
+LIBDIR     = $(PREFIX)/libexec/munin
 
 # Server only - Output directory
-HTMLDIR    = $(PREFIX)/www/docs
-CGIDIR     = $(PREFIX)/www/cgi
+HTMLDIR    = /var/opt/csw/munin/www
+CGIDIR     = /var/opt/csw/munin/www/cgi-bin
 
 # Where to put RRD files and other internal data, both master and node
-DBDIR      = $(DESTDIR)/var/opt/munin
+DBDIR      = /var/opt/csw/munin/db
 
 # Client only - Where the spool files are written. Must be writable by
 # group "munin", and should be preserved between reboots
@@ -53,17 +53,17 @@ SPOOLDIR   = $(DBDIR)/spool
 PLUGSTATE  = $(DBDIR)/plugin-state
 
 # Where Munin should place its logs.
-LOGDIR     = $(PREFIX)/log/munin
+LOGDIR     = /var/opt/csw/munin/log
 
 # Location of PID files and other statefiles. On the server, must be
 # writable by the user "munin".
-STATEDIR   = $(DESTDIR)/var/run/munin
+STATEDIR   = /var/opt/csw/munin/run
 
 # The perl interpreter to use
-PERL       := $(shell which perl)
+PERL       := /opt/csw/bin/perl
 
 # The python interpreter to use (used by some plugins)
-PYTHON     := /usr/bin/env python
+PYTHON     := /opt/csw/bin/python
 
 # The ruby interpreter to use (used by some plugins)
 RUBY       := /usr/bin/env ruby
@@ -89,11 +89,11 @@ JAVALIBDIR = $(LIBDIR)
 GOODSH     := $(shell PATH=`getconf PATH 2>/dev/null || echo $(PATH)` sh -c 'type sh | sed "s/.* //"')
 
 # Path of bash for bash specific plugins
-BASH       := /bin/bash
+BASH       := /usr/bin/bash
 
 # Server only - Where to install the perl libraries
 PERLSITELIB := $(shell $(PERL) -V:sitelib | cut -d"'" -f2)
-PERLLIB    = $(DESTDIR)$(PERLSITELIB)
+PERLLIB    = $(shell $(PERL) -V:sitelib | cut -d"'" -f2)
 
 # Client only - Install plugins for this architecture
 # the LANG=C makes tr work as expected, not regarding any locale it
@@ -108,7 +108,7 @@ HOSTNAME   := $(shell hostname)
 # What is the safest way to create a tempfile.
 # Default is to figure it out by testing various methods.
 # Replace this with a known platform-specific method
-MKTEMP     := $(shell ./test-mktemp)
+MKTEMP     := $(shell mktemp)
 
 # Munin version number.
 VERSION    := $(shell ./getversion)
@@ -126,9 +126,9 @@ CGIUSER := nobody
 # Which command to use to check if the USER and GROUP to run Munin as, exists.
 # These will work on most modern OSes:
 #
-GETENT     := $(shell which getent || which true 2>/dev/null)
-CHECKUSER  := $(shell $(GETENT) passwd $(USER) >/dev/null 2>/dev/null || (echo "echo User $(USER) nonexistent. Create the user and retry; exit 2"))
-CHECKGROUP := $(shell $(GETENT) group $(GROUP) >/dev/null 2>/dev/null || (echo "echo Group $(GROUP) nonexistent. Create the group and retry; exit 2"))
+#GETENT     := $(shell which getent || which true 2>/dev/null)
+#CHECKUSER  := $(shell $(GETENT) passwd $(USER) >/dev/null 2>/dev/null || (echo "echo User $(USER) nonexistent. Create the user and retry; exit 2"))
+#CHECKGROUP := $(shell $(GETENT) group $(GROUP) >/dev/null 2>/dev/null || (echo "echo Group $(GROUP) nonexistent. Create the group and retry; exit 2"))
 
 # For OSX, comment out the previous two lines and comment in these
 #
@@ -163,4 +163,4 @@ JAR        := jar
 JCVALID    = $(shell $(JC) -version >/dev/null 2>/dev/null && echo "yes")
 
 # Check whether setruid functionality can be used
-HASSETR    := $(shell perl -e 'use Config; my @vars=("d_setruid", "d_setreuid", "d_setresuid"); foreach my $$var (@vars) { if ($$Config{$$var} eq "define") { print "1\n"; exit 0; } } print "0\n"; exit 0;' )
+HASSETR    := $(shell /opt/csw/bin/perl -e 'use Config; my @vars=("d_setruid", "d_setreuid", "d_setresuid"); foreach my $$var (@vars) { if ($$Config{$$var} eq "define") { print "1\n"; exit 0; } } print "0\n"; exit 0;' )
-- 
1.7.10.3

