From a0c9edcc57bf41962cd3385baa61d418487e36f7 Mon Sep 17 00:00:00 2001
From: Dagobert Michelsen <dam@opencsw.org>
Date: Mon, 2 Aug 2010 16:30:29 +0200
Subject: [PATCH] Use ggrep in configure

---
 configure |   28 ++++++++++++++--------------
 1 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/configure b/configure
index 0166829..f5c9ea7 100755
--- a/configure
+++ b/configure
@@ -1532,7 +1532,7 @@ if test -f configure; then
     disable source_path_used
 else
     source_path="$(cd "$source_path"; pwd)"
-    echo "$source_path" | grep -q '[[:blank:]]' &&
+    echo "$source_path" | ggrep -q '[[:blank:]]' &&
         die "Out of tree builds are impossible with whitespace in source path."
     test -e "$source_path/config.h" &&
         die "Out of tree builds are impossible with config.h in source dir."
@@ -1726,16 +1726,16 @@ filter_cflags=echo
 filter_cppflags=echo
 filter_asflags=echo
 
-if   $cc -v 2>&1 | grep -qi ^gcc; then
+if   $cc -v 2>&1 | ggrep -qi ^gcc; then
     cc_type=gcc
     cc_version=__VERSION__
-    if ! $cc -dumpversion | grep -q '^2\.'; then
+    if ! $cc -dumpversion | ggrep -q '^2\.'; then
         CC_DEPFLAGS='-MMD -MF $(@:.o=.d) -MT $@'
         AS_DEPFLAGS='-MMD -MF $(@:.o=.d) -MT $@'
     fi
     speed_cflags='-O3'
     size_cflags='-Os'
-elif $cc --version 2>/dev/null | grep -q Intel; then
+elif $cc --version 2>/dev/null | ggrep -q Intel; then
     cc_type=icc
     cc_version="AV_STRINGIFY(__INTEL_COMPILER)"
     CC_DEPFLAGS='-MMD'
@@ -1743,12 +1743,12 @@ elif $cc --version 2>/dev/null | grep -q Intel; then
     speed_cflags='-O3'
     size_cflags='-Os'
     noopt_cflags='-O1'
-elif $cc -v 2>&1 | grep -q xlc; then
+elif $cc -v 2>&1 | ggrep -q xlc; then
     cc_type=xlc
     cc_version="AV_STRINGIFY(__IBMC__)"
     speed_cflags='-O5'
     size_cflags='-O5 -qcompact'
-elif $cc -V 2>/dev/null | grep -q Compaq; then
+elif $cc -V 2>/dev/null | ggrep -q Compaq; then
     cc_type=ccc
     cc_version="AV_STRINGIFY(__DECC_VER)"
     DEPFLAGS='$(CPPFLAGS) $(CFLAGS) -M'
@@ -1756,7 +1756,7 @@ elif $cc -V 2>/dev/null | grep -q Compaq; then
     add_ldflags -Wl,-z,now # calls to libots crash without this
     speed_cflags='-fast'
     size_cflags='-O1'
-elif $cc --vsn 2>/dev/null | grep -q "ARM C/C++ Compiler"; then
+elif $cc --vsn 2>/dev/null | ggrep -q "ARM C/C++ Compiler"; then
     test -d "$sysroot" || die "No valid sysroot specified."
     cc_type=armcc
     cc_version="AV_STRINGIFY(__ARMCC_VERSION)"
@@ -1772,7 +1772,7 @@ elif $cc --vsn 2>/dev/null | grep -q "ARM C/C++ Compiler"; then
     AS_DEPFLAGS='-MMD'
     speed_cflags='-O3'
     size_cflags='-Os'
-elif $cc -version 2>/dev/null | grep -q TMS470; then
+elif $cc -version 2>/dev/null | ggrep -q TMS470; then
     cc_type=tms470
     cc_version="AV_STRINGIFY(__TI_COMPILER_VERSION__)"
     cc="$cc --gcc --abi=eabi -eo=.o -mc -me"
@@ -1811,14 +1811,14 @@ elif $cc -version 2>/dev/null | grep -q TMS470; then
             esac
         done
     }
-elif $cc -v 2>&1 | grep -q clang; then
+elif $cc -v 2>&1 | ggrep -q clang; then
     cc_type=clang
     cc_version=__VERSION__
     CC_DEPFLAGS='-MMD'
     AS_DEPFLAGS='-MMD'
     speed_cflags='-O3'
     size_cflags='-Os'
-elif $cc -V 2>&1 | grep -q Sun; then
+elif $cc -V 2>&1 | ggrep -q Sun; then
     cc_type=suncc
     cc_version="AV_STRINGIFY(__SUNPRO_C)"
     DEPEND_CMD='$(DEPCC) $(DEPFLAGS) $< | sed -e "1s,^.*: ,$@: ," -e "\$$!s,\$$, \\\," -e "1!s,^.*: , ," > $(@:.o=.d)'
@@ -2130,7 +2130,7 @@ case $target_os in
     beos|haiku|zeta)
         prefix_default="$HOME/config"
         # 3 gcc releases known for BeOS, each with ugly bugs
-        gcc_version="$($cc -v 2>&1 | grep version | cut -d ' ' -f3-)"
+        gcc_version="$($cc -v 2>&1 | ggrep version | cut -d ' ' -f3-)"
         case "$gcc_version" in
           2.9-beos-991026*|2.9-beos-000224*) echo "R5/GG gcc"
             disable mmx
@@ -2145,7 +2145,7 @@ case $target_os in
         # no need for libm, but the inet stuff
         # Check for BONE
         # XXX: actually should check for NOT net_server
-        if echo $BEINCLUDES | grep -q 'headers/be/bone'; then
+        if echo $BEINCLUDES | ggrep -q 'headers/be/bone'; then
             network_extralibs="-lbind -lsocket"
         else
             enable beos_netserver
@@ -2390,7 +2390,7 @@ EOF
 check_cc <<EOF || die "endian test failed"
 unsigned int endian = 'B' << 24 | 'I' << 16 | 'G' << 8 | 'E';
 EOF
-od -t x1 $TMPO | grep -q '42 *49 *47 *45' && enable bigendian
+od -t x1 $TMPO | ggrep -q '42 *49 *47 *45' && enable bigendian
 
 if enabled alpha; then
 
@@ -3046,7 +3046,7 @@ EOF
 get_version(){
     name=$1
     file=$source_path/$2
-    eval $(grep "#define ${name}_VERSION_M" "$file" | awk '{ print $2"="$3 }')
+    eval $(ggrep "#define ${name}_VERSION_M" "$file" | awk '{ print $2"="$3 }')
     eval ${name}_VERSION=\$${name}_VERSION_MAJOR.\$${name}_VERSION_MINOR.\$${name}_VERSION_MICRO
     lcname=$(tolower $name)
     eval echo "${lcname}_VERSION=\$${name}_VERSION" >> config.mak
-- 
1.7.1

