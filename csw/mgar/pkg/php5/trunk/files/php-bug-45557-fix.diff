diff -up php-5.2.9/ext/libxml/libxml.c.visibility php-5.2.9/ext/libxml/libxml.c
--- php-5.2.9/ext/libxml/libxml.c.visibility  2008-01-30 16:31:42.000000000 +0100
+++ php-5.2.9/ext/libxml/libxml.c 2008-07-18 20:23:14.000000000 +0200
@@ -523,7 +523,7 @@ static void php_libxml_internal_error_ha
    }
 }
 
-void php_libxml_ctx_error(void *ctx, const char *msg, ...)
+PHP_LIBXML_API void php_libxml_ctx_error(void *ctx, const char *msg, ...)
 {
    va_list args;
    va_start(args, msg);
@@ -531,7 +531,7 @@ void php_libxml_ctx_error(void *ctx, con
    va_end(args);
 }
 
-void php_libxml_ctx_warning(void *ctx, const char *msg, ...)
+PHP_LIBXML_API void php_libxml_ctx_warning(void *ctx, const char *msg, ...)
 {
    va_list args;
    va_start(args, msg);
@@ -974,7 +974,7 @@ PHP_LIBXML_API int php_libxml_decrement_
    return ret_refcount;
 }
 
-void php_libxml_node_free_resource(xmlNodePtr node TSRMLS_DC)
+PHP_LIBXML_API void php_libxml_node_free_resource(xmlNodePtr node TSRMLS_DC)
 {
    if (!node) {
        return;
@@ -1010,7 +1010,7 @@ void php_libxml_node_free_resource(xmlNo
    }
 }
 
-void php_libxml_node_decrement_resource(php_libxml_node_object *object TSRMLS_DC)
+PHP_LIBXML_API void php_libxml_node_decrement_resource(php_libxml_node_object *object TSRMLS_DC)
 {
    int ret_refcount = -1;
    xmlNodePtr nodep;
diff -up php-5.2.9/ext/libxml/php_libxml.h.visibility php-5.2.9/ext/libxml/php_libxml.h
--- php-5.2.9/ext/libxml/php_libxml.h.visibility  2008-01-30 12:31:47.000000000 +0100
+++ php-5.2.9/ext/libxml/php_libxml.h 2008-07-18 20:23:01.000000000 +0200
@@ -84,12 +84,12 @@ PHP_LIBXML_API int php_libxml_decrement_
 PHP_LIBXML_API xmlNodePtr php_libxml_import_node(zval *object TSRMLS_DC);
 PHP_LIBXML_API int php_libxml_register_export(zend_class_entry *ce, php_libxml_export_node export_function);
 /* When an explicit freeing of node and children is required */
-void php_libxml_node_free_resource(xmlNodePtr node TSRMLS_DC);
+PHP_LIBXML_API void php_libxml_node_free_resource(xmlNodePtr node TSRMLS_DC);
 /* When object dtor is called as node may still be referenced */
-void php_libxml_node_decrement_resource(php_libxml_node_object *object TSRMLS_DC);
+PHP_LIBXML_API void php_libxml_node_decrement_resource(php_libxml_node_object *object TSRMLS_DC);
 PHP_LIBXML_API void php_libxml_error_handler(void *ctx, const char *msg, ...);
-void php_libxml_ctx_warning(void *ctx, const char *msg, ...);
-void php_libxml_ctx_error(void *ctx, const char *msg, ...);
+PHP_LIBXML_API void php_libxml_ctx_warning(void *ctx, const char *msg, ...);
+PHP_LIBXML_API void php_libxml_ctx_error(void *ctx, const char *msg, ...);
 PHP_LIBXML_API int php_libxml_xmlCheckUTF8(const unsigned char *s);
 PHP_LIBXML_API zval *php_libxml_switch_context(zval *context TSRMLS_DC);
 PHP_LIBXML_API void php_libxml_issue_error(int level, const char *msg TSRMLS_DC);

