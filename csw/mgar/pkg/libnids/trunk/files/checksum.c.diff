diff --speed-large-files --minimal -ru libnids-1.23.orig/src/checksum.c libnids-1.23/src/checksum.c
--- libnids-1.23.orig/src/checksum.c	2005-02-08 16:46:11.000000000 +0100
+++ libnids-1.23/src/checksum.c	2009-03-11 12:38:07.808047165 +0100
@@ -25,7 +25,7 @@
 	return 0;
 }
  
-#if ( __i386__ || __i386 )
+#if ( __i386__ || __i386 ) && __GNUC__
 // all asm procedures are copied from Linux 2.0.36 and 2.2.10 kernels
 
 /*
@@ -120,7 +120,7 @@
   By Jorge Cwik <jorge@laser.satlink.net>, adapted for linux by Arnt
   Gulbrandsen.
 */
-inline u_short ip_fast_csum(u_char * iph, u_int ihl)
+u_short ip_fast_csum(u_char * iph, u_int ihl)
 {
   u_int sum;
   if (dontchksum(((struct ip*)iph)->ip_src.s_addr))
@@ -191,13 +191,13 @@
   this routine is used for miscellaneous IP-like checksums, mainly in
   icmp.c
 */
-inline u_short
+u_short
 ip_compute_csum(u_char * buff, int len)
 {
   return (csum_fold(csum_partial(buff, len, 0)));
 }
 
-inline u_short
+u_short
 my_tcp_check(struct tcphdr *th, int len, u_int saddr, u_int daddr)
 {
   if (dontchksum(saddr))
@@ -205,7 +205,7 @@
   return csum_tcpudp_magic(saddr, daddr, len, IPPROTO_TCP,
 			   csum_partial((char *)th, len, 0));
 }
-inline u_short
+u_short
 my_udp_check(void *u, int len, u_int saddr, u_int daddr)
 {
   if (dontchksum(saddr))
