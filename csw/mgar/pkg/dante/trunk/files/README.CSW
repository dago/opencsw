Known limitation: libsocks/sockd without Kerberos support
---------------------------------------------------------

These builds of libsocks/sockd come without Kerberos support. If you
require Kerberos support and are willing to invest some time, feel
free to ping our maintainers mailing list and we will get you started
with our build system. If you can't help out, but still require
Kerberos support, please file a bug report so that we know about
your requirement.

Known limitation: libsocks does not support $SOCKS_CONF
-------------------------------------------------------

This build of the libsocks _does not_ support an alternate socks.conf
passed via the environment variable SOCKS_CONF. As a workaround you can
specify a SOCKS server via the environment variables pointed out in
socksify(1).

       SOCKS_SERVER, SOCKS4_SERVER, SOCKS5_SERVER

Background information:
libsocks employs a setuid/setgid safety check via issetugid(2) before
opening $SOCKS_CONF. Our base build platform (Solaris 8) does not offer
this system call, thus the libsocks build completely deactivates support
for $SOCK_CONF out of security reasons. This might change if we decide
to provide a Solaris 10 specific package of libsocks.
