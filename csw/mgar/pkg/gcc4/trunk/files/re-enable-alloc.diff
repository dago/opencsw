--- gcc-4.3.3/include/libiberty.h.o	2009-03-26 11:20:58.286509650 -0500
+++ gcc-4.3.3/include/libiberty.h	2009-03-26 11:18:37.103118030 -0500
@@ -48,6 +48,17 @@
 
 #include <stdio.h>
 
+#  ifndef alloca
+/* Make alloca work the best possible way.  */
+#   ifdef __GNUC__
+#    define alloca __builtin_alloca
+#   else /* not __GNUC__ */
+#    if HAVE_ALLOCA_H
+#     include <alloca.h>
+#    endif /* HAVE_ALLOCA_H */ 
+#   endif /* not __GNUC__ */
+#  endif /* not alloca */
+
 /* If the OS supports it, ensure that the supplied stream is setup to
    avoid any multi-threaded locking.  Otherwise leave the FILE pointer
    unchanged.  If the stream is NULL do nothing.  */
@@ -621,8 +632,8 @@
    also set/unset as it is often used to indicate whether code needs
    to call alloca(0).  */
 extern void *C_alloca (size_t) ATTRIBUTE_MALLOC;
-#undef alloca
 #if GCC_VERSION >= 2000 && !defined USE_C_ALLOCA
+#undef alloca
 # define alloca(x) __builtin_alloca(x)
 # undef C_ALLOCA
 # define ASTRDUP(X) \
@@ -631,11 +642,14 @@
    char *const libiberty_nptr = (char *const) alloca (libiberty_len); \
    (char *) memcpy (libiberty_nptr, libiberty_optr, libiberty_len); }))
 #else
+#if defined USE_C_ALLOCA || !defined HAVE_ALLOCA
+# undef alloca
 # define alloca(x) C_alloca(x)
 # undef USE_C_ALLOCA
 # define USE_C_ALLOCA 1
 # undef C_ALLOCA
 # define C_ALLOCA 1
+#endif
 extern const char *libiberty_optr;
 extern char *libiberty_nptr;
 extern unsigned long libiberty_len;
--- gcc-4.3.3/gcc/configure.ac.o	2009-03-26 11:19:37.352289013 -0500
+++ gcc-4.3.3/gcc/configure.ac	2009-03-26 11:20:24.112575128 -0500
@@ -1011,6 +1011,7 @@
 	sysconf strsignal getrusage nl_langinfo scandir alphasort \
 	gettimeofday mbstowcs wcswidth mmap mincore setlocale \
 	gcc_UNLOCKED_FUNCS)
+AC_FUNC_ALLOCA
 
 if test x$ac_cv_func_mbstowcs = xyes; then
   AC_CACHE_CHECK(whether mbstowcs works, gcc_cv_func_mbstowcs_works,
