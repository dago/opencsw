From 5a847a7488e2ea452503765cd74ebcddda2388af Mon Sep 17 00:00:00 2001
From: Dagobert Michelsen <daÂm@opencsw.org>
Date: Tue, 17 Apr 2012 15:26:39 +0200
Subject: [PATCH] Use correct m4 quoting for code in autoconf

This is documented in the autoconf manual in the section
  AC_LANG_SOURCE
---
 scripts/common.m4 |   32 ++++++++++++++++----------------
 1 file changed, 16 insertions(+), 16 deletions(-)

diff --git a/scripts/common.m4 b/scripts/common.m4
index 3d7e864..e0730bb 100644
--- a/scripts/common.m4
+++ b/scripts/common.m4
@@ -99,11 +99,11 @@ AC_DEFUN([TORRENT_OTFD], [
   AC_LANG_PUSH(C++)
   AC_MSG_CHECKING(for proper overloaded template function disambiguation)
 
-  AC_COMPILE_IFELSE([AC_LANG_SOURCE([
+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
       template <typename T> void f(T&) {}
       template <typename T> void f(T*) {}
       int main() { int *i = 0; f(*i); f(i); }
-      ])],
+      ]])],
     [
       AC_MSG_RESULT(yes)
     ], [
@@ -119,24 +119,24 @@ AC_DEFUN([TORRENT_MINCORE_SIGNEDNESS], [
   AC_LANG_PUSH(C++)
   AC_MSG_CHECKING(signedness of mincore parameter)
 
-  AC_COMPILE_IFELSE([AC_LANG_SOURCE([
+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
       #include <sys/types.h>
       #include <sys/mman.h>
       #include <unistd.h>
       void f() { mincore((char*)0, 0, (unsigned char*)0); }
-      ])],
+      ]])],
     [
       AC_DEFINE(USE_MINCORE, 1, Use mincore)
       AC_DEFINE(USE_MINCORE_UNSIGNED, 1, use unsigned char* in mincore)
       AC_MSG_RESULT(unsigned)
     ],
     [
-      AC_COMPILE_IFELSE([AC_LANG_SOURCE([
+      AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
           #include <sys/types.h>
           #include <sys/mman.h>
           #include <unistd.h>
           void f() { mincore((char*)0, 0, (char*)0); }
-          ])],
+          ]])],
         [
           AC_DEFINE(USE_MINCORE, 1, Use mincore)
           AC_DEFINE(USE_MINCORE_UNSIGNED, 0, use char* in mincore)
@@ -168,11 +168,11 @@ AC_DEFUN([TORRENT_MINCORE], [
 AC_DEFUN([TORRENT_CHECK_MADVISE], [
   AC_MSG_CHECKING(for madvise)
 
-  AC_COMPILE_IFELSE([AC_LANG_SOURCE([
+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
       #include <sys/types.h>
           #include <sys/mman.h>
           void f() { static char test[1024]; madvise((void *)test, sizeof(test), MADV_NORMAL); }
-      ])],
+      ]])],
     [
       AC_MSG_RESULT(yes)
       AC_DEFINE(USE_MADVISE, 1, Use madvise)
@@ -184,9 +184,9 @@ AC_DEFUN([TORRENT_CHECK_MADVISE], [
 AC_DEFUN([TORRENT_CHECK_POPCOUNT], [
   AC_MSG_CHECKING(for __builtin_popcount)
 
-  AC_COMPILE_IFELSE([AC_LANG_SOURCE([
+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
       int f() { return __builtin_popcount(0); }
-    ])],
+    ]])],
     [
       AC_MSG_RESULT(yes)
       AC_DEFINE(USE_BUILTIN_POPCOUNT, 1, Use __builtin_popcount.)
@@ -198,12 +198,12 @@ AC_DEFUN([TORRENT_CHECK_POPCOUNT], [
 AC_DEFUN([TORRENT_CHECK_CACHELINE], [
   AC_MSG_CHECKING(for cacheline)
 
-  AC_COMPILE_IFELSE([AC_LANG_SOURCE([
+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
       #include <stdlib.h>
           #include <linux/cache.h>
           void* vptr __cacheline_aligned;
           void f() { posix_memalign(&vptr, SMP_CACHE_BYTES, 42); }
-      ])],
+      ]])],
     [
       AC_MSG_RESULT(found builtin)
 dnl      AC_DEFINE(LT_SMP_CACHE_BYTES, SMP_CACHE_BYTES, Largest L1 cache size we know of, should work on all archs.)
@@ -223,10 +223,10 @@ dnl   Need to fix this so that it uses the stuff defined by the system.
 AC_DEFUN([TORRENT_CHECK_EXECINFO], [
   AC_MSG_CHECKING(for execinfo.h)
 
-  AC_RUN_IFELSE([AC_LANG_SOURCE([
+  AC_RUN_IFELSE([AC_LANG_SOURCE([[
       #include <execinfo.h>
       int main() { backtrace((void**)0, 0); backtrace_symbols((char**)0, 0); return 0;}
-      ])],
+      ]])],
     [
       AC_MSG_RESULT(yes)
       AC_DEFINE(USE_EXECINFO, 1, Use execinfo.h)
@@ -238,7 +238,7 @@ AC_DEFUN([TORRENT_CHECK_EXECINFO], [
 AC_DEFUN([TORRENT_CHECK_ALIGNED], [
   AC_MSG_CHECKING(the byte alignment)
 
-  AC_RUN_IFELSE([AC_LANG_SOURCE([
+  AC_RUN_IFELSE([AC_LANG_SOURCE([[
       #include <inttypes.h>
       int main() {
         char buf[8] = { 0, 0, 0, 0, 1, 0, 0, 0 };
@@ -247,7 +247,7 @@ AC_DEFUN([TORRENT_CHECK_ALIGNED], [
 	  if (*(uint32_t*)(buf + i) == 0) return -1;
 	return 0;
 	}
-      ])],
+      ]])],
     [
       AC_MSG_RESULT(none needed)
     ], [
-- 
1.7.10

