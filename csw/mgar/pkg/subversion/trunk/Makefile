# $Id$
#
# * How about shipping a changelog.CSW (example in files/)?
# * The language binding packages all have a whole stack of dependencies
#   (mostly the same libs that the main svn package has). Are those really
#   required? The shared objects generated by SWIG have them in their NEEDED
#   list, but they also link against the main libsvn_client-1.so which in
#   turn pulls in the rest. Can this be tweaked?
#    
# Known build facts/issues:
#
# * The complete build (gmake platforms) takes 4 hours. Build takes about 50
#   mins on build8x, 25 mins on build8s. This is only the build, the tests take
#   about 5 times as much (see TEST_TARGET).
# * Our package is listed on Subversion's binary packages page.  If this
#   package is being taken over, the new maintainer needs to be listed on
#   Subversion's page.  To update their page, one needs to check out this
#   repository: http://svn.apache.org/repos/asf/subversion/site/
#   ...and send the patch to the subversion dev mailing list.
#   http://subversion.apache.org/mailing-lists.html

NAME = subversion
VERSION = 1.8.9
GARTYPE = v2
utils
GARTYPE = v2

DESCRIPTION = Version control rethought
define BLURB
    The goal of the Subversion project is to build a version control system 
    that is a compelling replacement for CVS in the open sourceMASTER_SITES = http://archive.apache.org/dist/subversion/
DISTFILES += $(DISTNAME).tar.bz2nsvn += CSWpythonll
DISTFILES += CSWap2svn.postinstall CSWap2svn.preremove
DISTFILES += httpd-svn.conf.CSW svn_access.conf.CSW

# Fix: Add java headers for nested classes
# https://lists.ubuntu.com/archives/ubuntu-devel-discuss/2008-June/004633.html
PATCHFILES += javahl_headers_for_nested_classes.diff

# Hardcode location of system wide configuration to /etc/opt/csw/subversion
PATCHFILES += 0001-make-subversion-sysconfigdir-as-it-should-be-for-csw.patch

# Relocate locations of foreign language bindings
PATCHFILES += 0002-Fix-location-VENDOR_URL = http://subversion.apache.org$(VERSION).tar.bz2

LICENSE = LICENSE

# solaris9 does not have the ne so no gnome-keychain on Solaris9
PACKAGING_PLATFORMS = solaris9-sparc solaris9-i386 KAGING_PLATFORMS += solaris10-sparc solaris10-i386

BUILD_DEP_PKGS += CSWlibexpat-dev
BUILD_qlite3-dev
BUILD_DEP_PKGS-5.10 += CSWlibserf-dev
BUILD_DEP_PKGS += $(BUILD_DEP_PKGS-$(GAROSREL))

PACKAGES += CSWsvn
SPKG_DESC_CSWsvn = Version control rethought
CATALOGNAME_CSWsvnNAME_CSWsvn         = subversion
CHECKPKG_OVERRIDES_CSWsvn += catalogname-does-not-match-pkgname|pkgname=CSWsvn|catalogname=subversion|expected-catalogname=svn
RUNTI= CSWbdb48
RUNTIME_DEP_PKGS_CSWsvn += CSWlibsasl2-2
RUNTIME_DEP_PKGS_CSWsvn += CSWlibmagic1
RUNTIME_DEP_PKGS_CSWsvn += CSWlibsqlite3-0
RUNTIME_DEP_PKGS_CSWsvn += CSWlibexpat1
RUNTIME_DEP_PKGS_CSWsvn += CSWlibz1
RUNTIME_DEP_PKGS_CSWsvn += CSWlibintl8
RUNTIME_DEP_PKGS_CSWsvn += CSWlibapr1-0
RUNTIME_DEP_PKGS_CSWsvn += CSWlibaprutil1-0
RUNTIME_DEP_PKGS_CSWsvn += CSWlibserf1-1
RUNTIME_DEP_PKGS_CSWsvn += CSWlibiconv2
RUNTIME_DEP_PKGS_CSWsvn += CSWlibgnome-keyring0
RUNTIME_DEP_PKGS_CSWsvn_5.9 += CSWglib2
RUNTIME_DEP_PKGS_CSWsvn_5.10 += CSWlibglib2-0-0
RUNTIME_DEP_PKGS_CSWsvn += $(RUNTIME_DEP_PKGS_CSWsvn_$(GAROSREL))

PACKAGES += CSWsvn-dev
SPKG_DESC_CSWsvn-dev = Subversion Development Support
PKGFILES_CSWsvn-dev += $(PKGFILES_DEVEL)
PKGFILES_CSWsvn-dev += $(docdir)/$(CATALOGNAME_CSWsvn-dev)/changelog.CSW
OBSOLETED_BY_CSWsvn-dev += CSWsvn-devel

PACKAGES += CSWap2svn
SPKG_DESC_CSWap2svn = Subversion Modules for Apache 2.2
CATALOGNAME_CSWap2svn = ap2_subversion+= CSWlibaprutil1-0
CHECKPKG_OVERRIDES_CSWap2svn += catalogname-does-not-match-pkgname|pkgname=CSWap2svn|catalogname=ap2_subversion|expected-PKGFILES_CSWap2svn += $(prefix)/apache2/.*
PKGFILES_CSWap2svnS_CSWap2svn         += $(docdir)/$(CATALOGNAME_CSWap2svn)/changelog.CSW
RUNTIME_DEP_PKGS_CSWap2svn  = CSWsvn
RUNTIME_DEP_PKGS_CSWap2svn += CSWapache2
RUNTIME_DEP_PKGS_expat1Wap2svn += CSWbdb48
RUNTIME_DEP_PKGS_CSWap2svn += CSWlibapr1-0
RUNTIME_DEP_PKGS_CSWap2svn +RUNTIME_DEP_PKGS_CSWap2svn += CSWlibmagic1
RUNTIME_DEP_PKGS_CSWap2svn += CSWlibsqlite3-0
RUNTIME_DEP_PKGS_CSWap2svn += CSWlibz1
RUNTIME_DEP_PKGS_CSWap2svn += CSWlibintl8
RUNTIME_DEP_PKGS_CSWap2svn += CSWbdb48
RUNTIME_DEP_PKGS_CSWap2svn += CSWlibiconv2

PACKAGES += CSWjavasvn
SPKG_DESC_CSWjavasvn = Subversion Java Language Binding
PKGFILES_CSWjavasvn += $(SVNLIB)/.*java.*
PKGFILES_CSWjavasvn += $(docdir)/$(CATALOGNAME_CSWjavasvn)/changelog.CSW 
RUNTIME_DEP_PKGS_CSWjavasvn += CSWlibapr1-0
RUNTIME_DEP_PKGS_CSWjavasvn += CSWlibintl8
RUNTIME_DEP_PKGS_CSWjavasvn += CSWsvn
RUNTIME_DEP_PKGS_CSWjavasvn += CSWlibmagic1
RUNTIME_DEP_PKGS_CSWjavasvn += CSWlibiconv2
RUNTIME_DEP_PKGS_CSWjavasvn += CSWlibz1
RUNTIME_DEP_PKGS_CSWjavasvn += CSWbdb48
RUNTIME_DEP_PKGS_CSWjavasvn += CSWlibsasl2-2
RUNTIME_DEP_PKGS_CSWjavasvn += CSWlibexpat1
RUNTIME_DEP_PKGS_CSWjavasvn += CSWlibsqlite3-0
RUNTIME_DEP_PKGS_CSWjavasvn += CSWlibaprutil1-0
RUNTIME_DEP_PKGS_CSWjavasvn += CSWlibserf1-1

# This would go away when -norunpath would make it to the linker, but at this point this is difficult.
# Override for now as it is not harmful.
CHECKPKG_OVERRIDES_CSWjavasvn += bad-rpath-entry|/libopt/SUNWspro/lib/v8|opt/csw/lib/svn/libsvnjavahl-1.so.0.0.0
CHECKPKG_OVERRIDES_CSWjavasvn += bad-rpath-entropt/SUNWspro/lib/v8|opt/csw/lib/svn/libsvnjavahl-1.so.0.0.0
CHECKPKG_OVERRIDES_CSWjavasvn += bad-rpath-entryrw7opt/SUNWspro/lib/v8|opt/csw/lib/svn/libsvnjavahl-1.so.0.0.0
CHECKPKG_OVERRIDES_CSWjavasvn += bad-rpath-entrysparcad-rpath-entry|/lib|opt/csw/lib/svn/libsvnjavahl-1.so.0.0.0
CHECKPKG_OVERRbad-rpath-entry|/opt/SUNWspro/lib/v8|opt/csw/lib/svn/libsvnjavahl-1.so.0.0.0

PACKAGES += CSWpmsvn
SPKG_DESC_CSWpmsvn = Subversion Perl Language Binding
CATALOGNAME_CSWpmsvn = pm_subversion += CSWlibsqlite3-0
CHECKPKG_OVERRIDES_CSWpmsvn += catalogname-does-not-match-pkgname|pkgname=CSWpmsvn|catalogname=pm_subversion|expectedPKGFILES_CSWpmsvn += $(libdir)/perl.*
PKGFILES_CSWpmsvn += $(SVNLIB)/.*perl.*
PKGFILES_CSWpmsvn += $(mandir)/.*swig_perl.*
PKGFILES_CSWpmsvnES_CSWpmsvn         += $(docdir)/$(CATALOGNAME_CSWpmsvn)/changelog.CSW
RUNTIME_DEP_PKGS_CSWpmsvn += CSWperl
RUNTIME_DEP_PKGS_CSWpmsvn += CSWsvn
RUNTIME_DEP_PKGSapr1vn RUNTIME_DEP_PKGS_CSWpmsvn += CSWlibmagic1
RUNTIME_DEP_PKGS_CSWpmsvn += CSWlibiconv2
RUNTIME_DEP_PKGS_CSWpmsvn += CSWlibexpat1
RUNTIME_DEP_PKGS_CSWpmsvn += CSWlibz1
RUNTIME_DEP_PKGS_CSWpmsvn += CSWlibintl8
RUNTIME_DEP_PKGS_CSWpmsvn += CSWlibaprutil1-0
RUNTIME_DEP_PKGS_CSWpmsvn += CSWlibsqlite3-0

PACKAGES += CSWrbsvn
SPKG_DESC_CSWrbsvn = Subversion Ruby Language Binding
PKGFILES_CSWrbsvn += $(libdir)/ruby.*
PKGFILES_CSWrbsvn += $(SVNLIB)/.*swig_ruby.*
PKGFILES_CSWrbsvnES_CSWrbsvn         += $(docdir)/$(CATALOGNAME_CSWrbsvn)/changelog.CSW
RUNTIME_DEP_PKGS_CSWrbsvn += CSWsvn
RUNTIME_DEP_PKGS_CSWrbsvn += CSWruby
RUNTIME_DEP_Plibapr1-0
RUNTIME_DEP_PKGS_CSWrbsvn += CSWlibintl8
RUNTIME_DEP_PKGS_CSWrbsvn += CSWlibruby18-1vRUNTIME_DEP_PKGS_CSWrbsvn += CSWlibmagic1
RUNTIME_DEP_PKGS_CSWrbsvn += CSWlibiconv2
RUNTIME_DEP_PKGS_CSWrbsvn += CSWlibexpat1
RUNTIME_DEP_PKGS_CSWrbsvn += CSWlibz1
RUNTIME_DEP_PKGS_CSWrbsvn += CSWlibsasl2-2
RUNTIME_DEP_PKGS_CSWrbsvn += CSWbdb48
RUNTIME_DEP_PKGS_CSWrbsvn += CSWlibsqlite3-0
RUNTIME_DEP_PKGS_CSWrbsvn += CSWlibaprutil1-0
RUNTIME_DEP_PKGS_CSWrbsvn += CSWlibserf1-1

PACKAGES += CSWpythonsvn
SPKG_DESC_CSWpythonsvn = Subversion Python Language Binding
PKGFILES_CSWpythonsvn += $(libdir)/python.*
PKGFILES_CSWpythonsvn += $(SVNLIB)/python.*
PKGFILES_CSWpythonsvn += $(SVNLIB)/.*swig_py.*
PKGFILES_CSWpythonsvnSWpythonsvn         += $(docdir)/$(CATALOGNAME_CSWpythonsvn)/changelog.CSW
RUNTIME_DEP_PKGS_CSWapr1-0
RUNTIME_DEP_PKGS_CSWpythonsvn += CSWsvnn += CSWlibssl1-0-0
RUNTIME_DEP_PKGS_libmagic1
RUNTIME_DEP_PKGS_CSWpythonsvn += CSWlibsqlite3-0
RUNTIME_DEP_PKGS_CSWpythonsvn += CSWlibexpat1
RUNTIME_DEP_PKGS_CSWpythonsvn += CSWlibz1
RUNTIME_DEP_PKGS_CSWpythonsvn += CSWlibintl8
RUNTIME_DEP_PKGS_CSWpythonsvn += CSWlibiconv2
RUNTIME_DEP_PKGS_CSWpythonsvn += CSWbdb48
RUNTIME_DEP_PKGS_CSWpythonsvn += CSWlibsasl2-2
RUNTIME_DEP_PKGS_CSWpythonsvn += CSWlibaprutil1-0
RUNTIME_DEP_PKGS_CSWpythonsvn += CSWlibserf1-1n += CSWlibssl1-0-0
RUNTIME_DEP_PKGS_CSWpythCHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|GS_CSWpyth
# These are all due to linker problems with -z ignore
CHECKPKG_OVERRIDES_CSWap2svn += surplus-dependency|CSWlibiconv2
CHECKPKG_OVERRIDES_CSWap2svn += surplus-dependency|CSWlibintl8
CHECKPKG_OVERRIDES_CSWap2svn += surplus-dependency|CSWbdb48
CHECKPKG_OVERRIDES_CSWap2svn += surplus-dependency|CSWlibz1
CHECKPKG_OVERRIDES_CSWap2svn += surplus-dependency|CSWlibmagic1
CHECKPKG_OVERRIDES_CSWap2svn += surplus-dependency|CSWlibexpat1
CHECKPKG_OVERRIDES_CSWap2svn += surplus-dependency|CSWlibsqlite3-0
HECKPKG_OVERRIDES_CSWjavasvn += surplus-dependency|CSWlibserf1-1
CHECKPKG_OVERRIDES_CSWjavasvn += surplus-dependency|CSWlibsasl2-2
CHECKPKG_OVERRIDES_CSWjavasvn += surplus-dependency|CSWlibaprutil1-0
CHECKPKG_OVERRIDES_CSWjavasvn += surplus-dependency|CSWbdb48
CHECKPKG_OVERRIDES_CSWjavasvn += surplus-dependency|CSWlibiconv2
CHECKPKG_OVERRIDES_CSWjavasvn += surplus-dependency|CSWlibz1
CHECKPKG_OVERRIDES_CSWjavasvn += surplus-dependency|CSWlibmagic1
CHECKPKG_OVERRIDES_CSWjavasvn += surplus-dependency|CSWlibexpat1
CHECKPKG_OVERRIDES_CSWjavasvn += surplus-dependency|CSWlibsqlite3-0
CHECKPKG_OVERRIDES_CSWjavasvn += surplus-dependency|CSWlibserf1-1
CHECKPKG_OVERRIDES_CSWpmsvn += surplus-dependency|CSWlibaprutil1-0
CHECKPKG_OVERRIDES_CSWpmsvn += surplus-dependency|CSWlibintl8
CHECKPKG_OVERRIDES_CSWpmsvn += surplus-dependency|CSWlibiconv2
CHECKPKG_OVERRIDES_CSWpmsvn += surplus-dependency|CSWlibz1
CHECKPKG_OVERRIDES_CSWpmsvn += surplus-dependency|CSWlibmagic1
CHECKPKG_OVERRIDES_CSWpmsvn += surplus-dependency|CSWlibexpat1
CHECKPKG_OVERRIDES_CSWpmsvn += surplus-dependency|CSWlibsqlite3-0
CHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|CSWlibserf1-1
CHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|CSWlibsasl2-2
CHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|CSWlibintl8
CHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|CSWlibsqlite3-0
CHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|CSWlibaprutil1-0
CHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|CSWbdb48
CHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|CSWlibz1
CHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|CSWlibmagic1
CHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|CSWlibexpat1
CHECKPKG_OVERRIDES_CSWpythonsvn += surplus-dependency|CSWlibiconv2
CHECKPKG_OVERRIDES_CSWrbsvn += surplus-dependency|CSWlibserf1-1
CHECKPKG_OVERRIDES_CSWrbsvn += surplus-dependency|CSWlibsasl2-2
CHECKPKG_OVERRIDES_CSWrbsvn += surplus-dependency|CSWlibaprutil1-0
CHECKPKG_OVERRIDES_CSWrbsvn += surplus-dependency|CSWbdb48
CHECKPKG_OVERRIDES_CSWrbsvn += surplus-dependency|CSWlibiconv2
CHECKPKG_OVERRIDES_CSWrbsvn += surplus-dependency|CSWlibz1
CHECKPKG_OVERRIDES_CSWrbsvn += surplus-dependency|CSWlibmagic1
CHECKPKG_OVERRIDES_CSWrbsvn += surplus-dependency|CSWlibexpat1
CHECKPKG_OVERRIDES_CSWrbsvn += surplus-dependency|CSWlibsqlite3-0
CHECKPKG_OVERRIDES_CSWsvn += surplus-dependency|CSWlibserf1-1
CHECKPKG_OVERRIDES_CSWsvn += surplus-dependency|CSWlibiconv2n-of-bindings.patch

# should be in lib ... put something below to at least make it compile.
# on the svn mailing list people say we should not build the package
# with svn installed, and here it seems basic that we build with svn
# installed.
# SVNLIB     = $(prefix)/lib
SVNLIB     =
JAVA_HOME-5.9 = /usr/jdk1.6.0_20/
JAVA_HOME-5.10 = /usr/jdk/latest
JAVA_HOME = $(JAVA_HOME-$(GAROSREL))  = /usr/jdk/latest

#EXTRA_INC += $(prefix)/apache2/include

#EXTRA_LIB += /opt/csw/apache2/lib
EXTRA_LIB += /opt/csw/bdb48/lib
EXTRA_LIB += $(SVNLIB)
EXTRA_LINKER_FLAGS = -lintl -liconv

# Only add $ISALIST to dirs which ship optimized versions (done by explicitly
# excluding those lib dirs which are known not to ship optimized versions).
RUNPATH_ISALIST  = $(libdir)
#RUNPATH_ISALIST += $(filter-out /opt/csw/apache2/lib $(SVNLIB This is an example for a hook
REINPLACE_USRLOCAL += subversion/libsvn_repos/repos.c

PYCOMPILE = 1

EXTRA_MERGE_EXCLUDE_FILES += .*/perllocal\.pod $(libdir)/perl/5.*

STRIP_LIBTOOL = 1

NODIRPATHS      = --libdir --libexecdir
CONFIGURE_ARGS  = $(DIRPATHS) --libdir=$(SVNLIB) --libexecdir=$(SVNLIB)
CONFIGURE_ARGS += --disable-mod-activa += --with-jdk=$(JAVA_HOME)/j2sdk1.4.2_02/j2se
CONFIGURE_ARGS += --enable-javahl
CONFIGURE_ARGS += --with-apr=$(bindir)/apr-1-config
CONFIGURE_ARGS += --with-apr-util=$(bindir)/apu-1-config
CONFIGURE_ARGS += --with-apxs=$(prefix)/apache2/sbin/OME)
CONFIGURE_ARGS += --with-sasl=$(prefix)
CONFIGURE_ARGS += --with-serf=$(prefix)
CONFIGURE_ARGS += --with-ssl=$(prefix)
CONFIGURE_ARGS += --wCONFIGURE_ARGS += --with-apache-libexecdir=$(prefix)/apache2/libexec

# No Keyring on Solaris9
CONFIGURE_ARGS_5.10 += --with-gnome-keyring=$(prefix)

CONFIGURE_ARGS += $(CONFIGURE_ARGS_$(GAROSREL)-with-zlib=$(prefix)

# Once you have verified that a new upstream release passes the tests, you can use
# "SKIPTEST=1 gmake <target>" to skip the tests for simple repackaging tasks.
#
# Tests that fail with XFAIL (eXpected FAILs) are not actual FAILs, see 	
#   http://svn.collab.net/repos/svn/trunk/subversion/tests/README
#
# Tests take about 4hrs on build8x, 2hrs+ on build8s
#   merge_tests.py sub-suite takes most of the time. For a list of its tests see
#     $(WORKSRC)/subversion/tests/cmdline/merge_tests.py --list
#   and for progress information you could compare this with
#     tail -f $(WORKSRC)/tests.log | grep merge_tests.py
TES# At the moment the is one test failing because 1.8.5 does some funky statements sqlite 3.8.x doesn't understand but 3.7.x did:
#   http://subversion.tigris.org/issues/show_bug.cgi?id=4453
SKIPTEST ?= 1EST_TARGET  = check

include gar/category.mk

# pygthon bindings do not link since svn-1.6.5..
BINDING_LANGS   = java perl python ruby
BINDING_TARGETS = $(addprefix svn-,$(BINDING_LANGS))

PI_DEPENDS += copy-templates
PI_DEPENDS += create-ra_dav-symlinks
PI_DEPENDS += $(BINDING_TARGETS)

post-install-modulated: $(PI_DEPENDS)
	$(MAKECOOKIE)

# The whole subversion build is done with Sun's cc. Ruby language bindings
# need to be built with gcc. Hack (!) together Makefile.gcc/libtool.gcc which
# are then used in the "svn-ruby" target.
# See http://lists.opencsw.org/pipermail/maintainers/2009-May/002325.html
post-configure-modulated:
	@echo "~~~ Creating GCC Makefile and libtool for ruby ~~~"

	gcp $(WORKSRC)/Makefile $(WORKSRC)/Makefile.gcc
	gcp $(WORKSRC)/libtool $(WORKSRC)/libtool.gcc

	@# -mt\|* effectively strips any occasion of -mt or -mt| out of
	@# libtool.gcc, but what for? -mt is recognized by both Sun's cc
	@# and gcc and is responsible for adding multi-threading support.
	gsed -i \
		-e 's,-mt|*,,' \
		-e 's,-xO3,-pipe -O2,' \
		-e 's,KPIC,fPIC,' \
		-e 's,/opt/SUNWspro/bin/cc,/opt/csw/bin/gcc,' \
		-e 's,/opt/SUNWspro/bin/CC,/opt/csw/bin/g++,' \
		 $(WORKS\
		-e 's,libtool,libtool.gcc,' \
         $(WORKSRC)/Makefile.gcc
	gsed -i \
		-e 's,-Wno-int-to-pointer-cast,,' \
         $(WORKSRC)/MakefileRKSRC)/Makefile.gcc
	gsed -i -e 's,postdeps=.*,postdeps="",' $(WORKSRC)/libtool.gcc
	( if [ "$(GARCH)" = "sparc" ]; then \
    	perl -i -pe 's,-xarch=v8,-mcpu=v8,' $(WORKSRC)/*.gcc; \
	else \
	    perl -i -pe 's,-xarch=386,-march=i386,' $(WORKSRC)/*.gcc; \
	fi )
	@$(MAKECOOKIE)

PI_DEPENDS  = $(BINDING_TARGETS)
PI_DEPENDS += rbsvn-prototype
PI_DEPENDS += copy-templates
PI_DEPENDS += install-man

# libsvn_ra_dav-1* has been renamed to libsvn_ra_neon-1* in the new versions
# of subversion (starting with?), we need to link for backward compatability
create-ra_dav-symlinks:
	( cd $(DESTDIR)$(SVNLIB); \
		ln -s libsvn_ra_neon-1.so.0.0.0 libsvn_ra_dav-1.so.0; \
		ln -s libsvn_ra_neon-1.so.0.0.0 libsvn_ra_dav-1.so; )
	@$(MAKECOOKIE)

svn-python:
	@echo " ==> Building Python bindings"
	touch \
		$(WORKSRC)/subversion/bindings/swig/python/*.c \
		$(WORKSRC)/subversion/bindings/swig/python/*.py
	@/usr/bin/env -i $(BUILD_ENV) /opt/csw/bin/gmake -C $(WORKSRC) swig-py
	@/usr/bin/env -i $(INSTALL_ENV) /opt/csw/bin/gmake -C $(WORKSRC) install-swig-py DESTDIR=$(DESTDIR)
	#@$(TEST_ENV)    gmake -C $(WORKSRC) check-swig-py
	@$(MAKECOOKIE)

svn-perl:
	@echo " ==> Building Perl bindings"
	touch \
		$(WORKSRC)/subversion/bindings/swig/perl/native/*.c \
		$(WORKSRC)/subversion/bindings/swig/perl/native/*.pm
	/usr/bin/env -i $(BUILD_ENV) /opt/csw/bin/gmake -C $(WORKSRC) swig-pl
	/usr/bin/env -i $(INSTALL_ENV) /opt/csw/bin/gmake DESTDIR=$(DESTDIR) -C $(WORKSRC) install-swig-pl
	@$(MAKECOOKIE)

svn-ruby:
	@echo " ==> Building Ruby bindings"
	touch $(WORKSRC)/subversion/bindings/swig/ruby/*.c
	/usr/bin/env -i $(BUILD_ENV) /opt/csw/bin/gmake -C $(WORKSRC) swig-rb
	/usr/bin/env -i $(INSTALL_ENV) /opt/csw/bin/gmake -C $(WORKSRC) install-swig-rb
	@$(MAKECOOKIE)

svn-java: EXTRA_LINKER_FLAGS += -norunpath
svn-java:
	@echo " ==> Building Java bindings"
	touch $(WORKSRC)/subversion/bindings/javahl/native/*.c
	/usr/bin/env -i $(BUILD_ENV) /opt/csw/bin/gmake -C $(WORKSRC) javahl;
	/usr/bin/env -i $(INSTALL_ENV) /opt/csw/bin/gmake -C $(WORKSRC) install-javahl;
	@$(MAKECOOKIE)

#post-merge: $(foreach P,$(_PKG_SPECS),install-changelog-$P)

$(DESTDIR)$(docdir):
	mkdir -p $@

svnbook: $(DESTDIR)$(docdir)
	@echo " ==> Installing svn book"
	( cd $(WORKSRC)/doc/book ; \
	  ginstall svn-book.html $(DESTDIR)$(docdir) ; \
	  ginstall svn-book.pdf $(DESTDIR)$(docdir) )
	@$(MAKECOOKIE)

copy-templates:
	ginstall -d $(DESTDIR)$(prefix)/apache2/etc/extra
	ginstall -m 0644 \
		$(WORKDIR)/httpd-svn.conf.CSW \
		$(DESTDIR)$(prefix)/apache2/etc/extra
	ginstall -m 0644 \
		$(WORKDIR)/svn_access.conf.CSW \
		$(DESTDIR)$(prefix)/apache2/etc
	@$(MAKECOOKIE)

install-man:
	ginstall -m 0644 \
		$(WORKSRC)/subversion/svnsync/svnsync.1 \
		$(DESTDIR)$(mandir)/man1
	@$(MAKECOOKIE)


post-merge:
	@(cd $(PKGROOT)/opt/csw/lib/svn/python; find . -name '*pyc' -exec rm {} \