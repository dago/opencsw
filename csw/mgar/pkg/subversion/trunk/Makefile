# TODO (release-critical prefixed with !, non release-critical with *)
#
# * How about shipping a changelog.CSW (example in files/)?
# * The language binding packages all have a whole stack of dependencies
#   (mostly the same libs that the main svn package has). Are those really
#   required? The shared objects generated by SWIG have them in their NEEDED
#   list, but they also link against the main libsvn_client-1.so which in
#   turn pulls in the rest. Can this be tweaked?
#    
# Known build facts/issues:
#
# * Build takes about 50 mins on build8x, 25 mins on build8s. This is only
#   the build, the tests take about 5 times as much (see TEST_TARGET).
# * checkpkg suggests CSWbdb over CSWbdb47, because it picks up the
#   libdb-4.7.so symlink in $(libdir) which belongs to the stub CSWbdb. As
#   the lib itself belongs to CSWbdb47, the CSWbdb47 dep is completely fine.
#
GARNAME = subversion
GARVERSION = 1.6.6
CATEGORIES = utils

DESCRIPTION = Version control rethought
define BLURB
    The goal of the Subversion project is to build a version control system 
    that is a compelling replacement for CVS in the open source community.
endef

VENDOR_URL   = http://subversion.tigris.org/
MASTER_SITES = http://subversion.tigris.org/downloads/
DISTFILES    = $(GARNAME)-$(GARVERSION).tar.bz2
UFILES_REGEX = $(GARNAME)-(\d+(?:\.\d+)*).tar.bz2

PACKAGES  = CSWsvn CSWsvn-devel CSWap2svn CSWpmsvn
PACKAGES += CSWpythonsvn CSWrbsvn CSWjavasvn

SPKG_DESC_CSWsvn           = Version control rethought
CATALOGNAME_CSWsvn         = subversion
RUNTIME_DEP_PKGS_CSWsvn       = CSWapache2rt
RUNTIME_DEP_PKGS_CSWsvn      += CSWbdb47
RUNTIME_DEP_PKGS_CSWsvn      += CSWexpat
RUNTIME_DEP_PKGS_CSWsvn      += CSWggettextrt
RUNTIME_DEP_PKGS_CSWsvn      += CSWiconv
RUNTIME_DEP_PKGS_CSWsvn      += CSWneon
RUNTIME_DEP_PKGS_CSWsvn      += CSWoldaprt
RUNTIME_DEP_PKGS_CSWsvn      += CSWsasl
RUNTIME_DEP_PKGS_CSWsvn      += CSWsqlite3rt
RUNTIME_DEP_PKGS_CSWsvn      += CSWzlib
# There are additional requirements for $(docdir)/subversion/tools/ which
# also contains the stack of hook-scripts. Should we add those?
#RUNTIME_DEP_PKGS_CSWsvn      += CSWperl
#RUNTIME_DEP_PKGS_CSWsvn      += CSWpython
#RUNTIME_DEP_PKGS_CSWsvn      += CSWruby

SPKG_DESC_CSWsvn-devel     = Subversion Development Support
CATALOGNAME_CSWsvn-devel   = subversion_devel
RUNTIME_DEP_PKGS_CSWsvn-devel = CSWsvn
ARCHALL_CSWsvn-devel       = 1
PKGFILES_CSWsvn-devel      = $(PKGFILES_DEVEL)
PKGFILES_CSWsvn-devel     += $(docdir)/$(CATALOGNAME_CSWsvn-devel)/changelog.CSW

SPKG_DESC_CSWap2svn        = Subversion Modules for Apache 2.2
CATALOGNAME_CSWap2svn      = ap2_subversion
RUNTIME_DEP_PKGS_CSWap2svn    = CSWsvn
RUNTIME_DEP_PKGS_CSWap2svn   += CSWggettextrt
RUNTIME_DEP_PKGS_CSWap2svn   += CSWiconv
PKGFILES_CSWap2svn         = $(prefix)/apache2.*
PKGFILES_CSWap2svn        += $(docdir)/$(CATALOGNAME_CSWap2svn)/changelog.CSW

SPKG_DESC_CSWjavasvn       = Subversion Java Language Binding
CATALOGNAME_CSWjavasvn     = javasvn
RUNTIME_DEP_PKGS_CSWjavasvn   = CSWsvn
RUNTIME_DEP_PKGS_CSWjavasvn  += CSWapache2rt
RUNTIME_DEP_PKGS_CSWjavasvn  += CSWexpat
RUNTIME_DEP_PKGS_CSWjavasvn  += CSWggettextrt
RUNTIME_DEP_PKGS_CSWjavasvn  += CSWiconv
RUNTIME_DEP_PKGS_CSWjavasvn  += CSWneon
RUNTIME_DEP_PKGS_CSWjavasvn  += CSWoldaprt
PKGFILES_CSWjavasvn        = $(SVNLIB)/.*java.*
PKGFILES_CSWjavasvn       += $(docdir)/$(CATALOGNAME_CSWjavasvn)/changelog.CSW

SPKG_DESC_CSWpmsvn         = Subversion Perl Language Binding
CATALOGNAME_CSWpmsvn       = pm_subversion
RUNTIME_DEP_PKGS_CSWpmsvn     = CSWsvn
RUNTIME_DEP_PKGS_CSWpmsvn    += CSWperl
RUNTIME_DEP_PKGS_CSWpmsvn    += CSWapache2rt
RUNTIME_DEP_PKGS_CSWpmsvn    += CSWexpat
RUNTIME_DEP_PKGS_CSWpmsvn    += CSWggettextrt
RUNTIME_DEP_PKGS_CSWpmsvn    += CSWiconv
RUNTIME_DEP_PKGS_CSWpmsvn    += CSWoldaprt
PKGFILES_CSWpmsvn          = $(libdir)/perl.*
PKGFILES_CSWpmsvn         += $(SVNLIB)/.*perl.*
PKGFILES_CSWpmsvn         += $(mandir)/.*swig_perl.*
PKGFILES_CSWpmsvn         += $(docdir)/$(CATALOGNAME_CSWpmsvn)/changelog.CSW

SPKG_DESC_CSWrbsvn         = Subversion Ruby Language Binding
CATALOGNAME_CSWrbsvn       = rbsvn
RUNTIME_DEP_PKGS_CSWrbsvn     = CSWsvn
RUNTIME_DEP_PKGS_CSWrbsvn    += CSWruby
RUNTIME_DEP_PKGS_CSWrbsvn    += CSWapache2rt
RUNTIME_DEP_PKGS_CSWrbsvn    += CSWexpat
RUNTIME_DEP_PKGS_CSWrbsvn    += CSWggettextrt
RUNTIME_DEP_PKGS_CSWrbsvn    += CSWiconv
RUNTIME_DEP_PKGS_CSWrbsvn    += CSWoldaprt
PKGFILES_CSWrbsvn          = $(libdir)/ruby.*
PKGFILES_CSWrbsvn         += $(SVNLIB)/.*swig_ruby.*
PKGFILES_CSWrbsvn         += $(docdir)/$(CATALOGNAME_CSWrbsvn)/changelog.CSW

SPKG_DESC_CSWpythonsvn       = Subversion Python Language Binding
CATALOGNAME_CSWpythonsvn     = pythonsvn
RUNTIME_DEP_PKGS_CSWpythonsvn   = CSWsvn
RUNTIME_DEP_PKGS_CSWpythonsvn  += CSWpython
RUNTIME_DEP_PKGS_CSWpythonsvn  += CSWapache2rt
RUNTIME_DEP_PKGS_CSWpythonsvn  += CSWexpat
RUNTIME_DEP_PKGS_CSWpythonsvn  += CSWggettextrt
RUNTIME_DEP_PKGS_CSWpythonsvn  += CSWiconv
RUNTIME_DEP_PKGS_CSWpythonsvn  += CSWoldaprt
PKGFILES_CSWpythonsvn        = $(libdir)/python.*
PKGFILES_CSWpythonsvn       += $(SVNLIB)/.*swig_py.*
PKGFILES_CSWpythonsvn       += $(docdir)/$(CATALOGNAME_CSWpythonsvn)/changelog.CSW


DISTFILES += CSWsvn.checkinstall
DISTFILES += CSWap2svn.postinstall CSWap2svn.preremove
DISTFILES += httpd-svn.conf.CSW svn_access.conf.CSW
DISTFILES += fixme.sh

# Fix: Add java headers for nested classes
# https://lists.ubuntu.com/archives/ubuntu-devel-discuss/2008-June/004633.html
PATCHFILES += javahl_headers_for_nested_classes.diff
PATCHFILES += subversion161.diff
PATCHFILES += 0001-make-subversion-sysconfigdir-as-it-should-be-for-csw.patch

SVNLIB     = $(prefix)/lib/svn
JDK        = /usr/jdk1.5.0_15

EXTRA_INC  = $(JDK)/include
EXTRA_INC += $(prefix)/apache2/include

EXTRA_LIB  = /opt/csw/bdb47/lib
EXTRA_LIB += /opt/csw/apache2/lib
EXTRA_LIB += $(SVNLIB)
EXTRA_LINKER_FLAGS = -lintl -liconv

# Only add $ISALIST to dirs which ship optimized versions (done by explicitly
# excluding those lib dirs which are known not to ship optimized versions).
RUNPATH_ISALIST  = $(libdir)
RUNPATH_ISALIST += $(filter-out /opt/csw/apache2/lib $(SVNLIB),$(EXTRA_LIB)) 

EXTRA_MERGE_EXCLUDE_FILES += .*\.pyo .*\.pyc
PROTOTYPE_MODIFIERS += cswpycompile
PROTOTYPE_FILES_cswpycompile = $(libdir)/python/.*\.py
PROTOTYPE_CLASS_cswpycompile = cswpycompile

# All of the perl modules go to $(libdir)/perl/site_perl. We are not interested
# in the version specific perl directory which only contains a perllocal.pod.
# Can this be re-done as a version agnostic regex? Couldn't get this to work :/
# EXTRA_MERGE_EXCLUDE_FILES += $(libdir)/perl/(?!site_perl\/)
EXTRA_MERGE_EXCLUDE_FILES += $(libdir)/perl/5.8.8.*

NODIRPATHS      = --libdir --libexecdir
CONFIGURE_ARGS  = $(DIRPATHS) --libdir=$(SVNLIB) --libexecdir=$(SVNLIB)
CONFIGURE_ARGS += --disable-mod-activation
CONFIGURE_ARGS += --disable-static
CONFIGURE_ARGS += --with-berkeley-db=db.h:/opt/csw/bdb47/include:/opt/csw/bdb47/lib:db
CONFIGURE_ARGS += --enable-javahl
CONFIGURE_ARGS += --with-apr=$(prefix)/apache2/bin/apr-config
CONFIGURE_ARGS += --with-apr-util=$(prefix)/apache2/bin/apu-config
CONFIGURE_ARGS += --with-apxs=$(prefix)/apache2/sbin/apxs
CONFIGURE_ARGS += --with-jdk=$(JDK)
CONFIGURE_ARGS += --with-sasl=$(prefix)
CONFIGURE_ARGS += --with-ssl=$(prefix)
CONFIGURE_ARGS += --with-zlib=$(prefix)
CONFIGURE_ARGS += --with-serf=$(prefix)

# Once you have verified that a new upstream release passes the tests, you can use
# "SKIPTEST=1 gmake <target>" to skip the tests for simple repackaging tasks.
#
# Tests that fail with XFAIL (eXpected FAILs) are not actual FAILs, see 	
#   http://svn.collab.net/repos/svn/trunk/subversion/tests/README
#
# Tests take about 4hrs on build8x, 2hrs+ on build8s
#   merge_tests.py sub-suite takes most of the time. For a list of its tests see
#     $(WORKSRC)/subversion/tests/cmdline/merge_tests.py --list
#   and for progress information you could compare this with
#     tail -f $(WORKSRC)/tests.log | grep merge_tests.py
TEST_TARGET  = check

include gar/category.mk

BINDING_LANGS   = java perl python ruby
BINDING_TARGETS = $(addprefix svn-,$(BINDING_LANGS))

PI_DEPENDS += copy-apache-templates
PI_DEPENDS += create-ra_dav-symlinks
PI_DEPENDS += install-extras
PI_DEPENDS += $(BINDING_TARGETS)

post-install-modulated: $(PI_DEPENDS)
	$(MAKECOOKIE)

# The whole subversion build is done with Sun's cc. Ruby language bindings
# need to be built with gcc. Hack (!) together Makefile.gcc/libtool.gcc which
# are then used in the "svn-ruby" target.
# See http://lists.opencsw.org/pipermail/maintainers/2009-May/002325.html
post-configure-modulated:
	@echo "~~~ Fixing Libtool ~~~"
	$(DOWNLOADDIR)/fixme.sh $(WORKSRC)
	@echo "~~~ Creating GCC Makefile and libtool for ruby ~~~"

	gcp $(WORKSRC)/Makefile $(WORKSRC)/Makefile.gcc
	gcp $(WORKSRC)/libtool $(WORKSRC)/libtool.gcc

	@# -mt\|* effectively strips any occasion of -mt or -mt| out of
	@# libtool.gcc, but what for? -mt is recognized by both Sun's cc
	@# and gcc and is responsible for adding multi-threading support.
	gsed -i \
		-e 's,-mt|*,,' \
		-e 's,-xO3,-pipe -O2,' \
		-e 's,KPIC,fPIC,' \
		-e 's,/opt/studio/SOS11/SUNWspro/bin/cc,/opt/csw/gcc4/bin/gcc,' \
		-e 's,/opt/studio/SOS11/SUNWspro/bin/CC,/opt/csw/gcc4/bin/g++,' \
		 $(WORKSRC)/*.gcc
	gsed -i -e 's,libtool,libtool.gcc,' $(WORKSRC)/Makefile.gcc
	gsed -i -e 's,postdeps=.*,postdeps="",' $(WORKSRC)/libtool.gcc
	( if [ "$(GARCH)" = "sparc" ]; then \
    	perl -i -pe 's,-xarch=v8,-mcpu=v8,' $(WORKSRC)/*.gcc; \
	else \
	    perl -i -pe 's,-xarch=386,-march=i386,' $(WORKSRC)/*.gcc; \
	fi )
	@$(MAKECOOKIE)

copy-apache-templates:
	ginstall -d $(DESTDIR)$(prefix)/apache2/etc/extra
	ginstall -m 0644 \
		$(WORKDIR)/httpd-svn.conf.CSW \
		$(DESTDIR)$(prefix)/apache2/etc/extra
	ginstall -m 0644 \
		$(WORKDIR)/svn_access.conf.CSW \
		$(DESTDIR)$(prefix)/apache2/etc
	@$(MAKECOOKIE)

# libsvn_ra_dav-1* has been renamed to libsvn_ra_neon-1* in the new versions
# of subversion (starting with?), we need to link for backward compatability
create-ra_dav-symlinks:
	( cd $(DESTDIR)$(SVNLIB); \
		ln -s libsvn_ra_neon-1.so.0.0.0 libsvn_ra_dav-1.so.0; \
		ln -s libsvn_ra_neon-1.so.0.0.0 libsvn_ra_dav-1.so; )
	@$(MAKECOOKIE)

install-extras:
	ginstall -d $(DESTDIR)$(docdir)/subversion/tools
	ginstall -d $(DESTDIR)$(docdir)/subversion/contrib
	gcp -R $(WORKSRC)/tools/* $(DESTDIR)$(docdir)/subversion/tools/
	gcp -R $(WORKSRC)/contrib/* $(DESTDIR)$(docdir)/subversion/contrib/
	$(BUILD_ENV) $(INSTALL_ENV) gmake -C $(WORKSRC) install-tools
	$(BUILD_ENV) $(INSTALL_ENV) gmake -C $(WORKSRC) install-contrib
	@$(MAKECOOKIE)

svn-python:
	@echo " ==> Building Python bindings"
	touch \
		$(WORKSRC)/subversion/bindings/swig/python/*.c \
		$(WORKSRC)/subversion/bindings/swig/python/*.py
	$(BUILD_ENV)   gmake -C $(WORKSRC) swig-py
	$(INSTALL_ENV) gmake -C $(WORKSRC) install-swig-py 
	@$(MAKECOOKIE)

svn-perl:
	@echo " ==> Building Perl bindings"
	touch \
		$(WORKSRC)/subversion/bindings/swig/perl/native/*.c \
		$(WORKSRC)/subversion/bindings/swig/perl/native/*.pm
	$(BUILD_ENV)   gmake -C $(WORKSRC) swig-pl
	$(INSTALL_ENV) gmake DESTDIR=$(DESTDIR) -C $(WORKSRC) install-swig-pl
	@$(MAKECOOKIE)

svn-ruby:
	@echo " ==> Building Ruby bindings"
	touch $(WORKSRC)/subversion/bindings/swig/ruby/*.c
	$(BUILD_ENV) gmake -f Makefile.gcc -C $(WORKSRC) swig-rb
	$(INSTALL_ENV) gmake -f Makefile.gcc -C $(WORKSRC) install-swig-rb
	@$(MAKECOOKIE)

svn-java:
	@echo " ==> Building Java bindings"
	touch $(WORKSRC)/subversion/bindings/javahl/native/*.c
	$(BUILD_ENV)   gmake -C $(WORKSRC) javahl;
	$(INSTALL_ENV) gmake -C $(WORKSRC) install-javahl;
	@$(MAKECOOKIE)

post-merge: $(foreach P,$(_PKG_SPECS),install-changelog-$P)

install-changelog-%:
	ginstall -D $(FILEDIR)/changelog.CSW \
		$(PKGROOT)$(docdir)/$(call catalogname,$*)/changelog.CSW
