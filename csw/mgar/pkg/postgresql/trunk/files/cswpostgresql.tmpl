#!/bin/sh
# $Id$
#
# PostgreSQL startup script - part of the CSWpostgresql package
#
# 2009-11-29  Maciej Blizinski (maciej@opencsw.org)
#   - Parametrized file locations
#   - Style changes
#
#
#RC_KNUM 20         # Number used for kill script symlink, e.g. K20cswfoo
#RC_SNUM 80         # Number used for start script symlink, e.g. S80cswfoo
#RC_KLEV 0,1,2,S    # Run levels that should have a kill script symlink
#RC_SLEV 3          # Run levels that should have a start script symlink
#AUTOENABLE no      # If set to no will not enable service regardless of
#                     local csw.conf, use when a package needs setup before
#                     being useful, would otherwise leave service in
#                     maintenance mode

VERSION=@BASE_VERSION_NODOT@

USERCONF=@CSWPGSQLCONFFILE_VERSIONED@
PGCTL=@bindir@/pg_ctl-${VERSION}
PGINIT=@bindir@/initdb-${VERSION}

# Read in the user configuration file
[ -s /opt/csw/etc/${USERCONF} ] && . /opt/csw/etc/${USERCONF}
[ -s @sysconfdir@/${USERCONF} ] && . @sysconfdir@/${USERCONF}

# Defaults
[ -z "${PGDATA}" ] && PGDATA=@PGDATA@
[ -z "${SHUTDOWNMODE}" ] && SHUTDOWNMODE=fast
[ -z "${PGENCODING}" ] && PGENCODING=UTF8
[ -z "${PGSUPERUSER}" ] && PGSUPERUSER=postgres
[ -z "${PGLOGOUTPUT}" ] && PGLOGOUTPUT=${PGDATA}/postgresql.log

if [ -n "${SERVEROPTS}" ]
then
    # Remove the -o option, we provide it later on
    SERVEROPTS=`echo "${SERVEROPTS}" | sed 's/^-o[ ]*//'`
fi
if [ -n "${PGLOCALE}" ]
then
    PGLOCALE="--locale=${PGLOCALE}"
fi


# Exit if postgres user hasn't been created.
# FIXME: This bit of code is old. It might be obsolete.
if grep '^postgres:' /etc/passwd >/dev/null; then
	echo > /dev/null
else
  getent passwd postgres >/dev/null
  if [ $? -ne 0 ] ; then
	 exit 0
  fi
fi

cd /

case "$1" in
start)
      if [ -d ${PGDATA} -a `ls -l ${PGDATA} 2> /dev/null | wc -l` -gt 1 ]; then
	 # PostgreSQL data directory exists and is populated
	 echo "Starting PostgreSQL..."
	 if [ -n "${SERVEROPTS}" ]
	 then
	     su postgres -c "${PGCTL} start -D ${PGDATA} -l ${PGLOGOUTPUT} -o '${SERVEROPTS}'"
	 else
	     su postgres -c "${PGCTL} start -D ${PGDATA} -l ${PGLOGOUTPUT}"
	 fi
      fi
      ;;

stop)
     echo "Stopping PostgreSQL database..."
     su postgres -c "${PGCTL} stop -D ${PGDATA} -l ${PGLOGOUTPUT} -m ${SHUTDOWNMODE}"
     true  # The previous command fails when there's no .pid file
     ;;

restart)
     echo "Restarting PostgreSQL database..."
     if [ -n "${SERVEROPTS}" ]
     then
	 su postgres -c "${PGCTL} restart -D ${PGDATA} -l ${PGLOGOUTPUT} -m ${SHUTDOWNMODE} -o '${SERVEROPTS}'"
     else
	 su postgres -c "${PGCTL} restart -D ${PGDATA} -l ${PGLOGOUTPUT} -m ${SHUTDOWNMODE}"
     fi
     ;;

reload)
     echo "Reloading PostgreSQL database..."
     su postgres -c "${PGCTL} reload -D ${PGDATA} -l ${PGLOGOUTPUT}"
     ;;

status)
     su postgres -c "${PGCTL} status -D ${PGDATA}"
     ;;

init)
     # create and initialise data directory
     echo "Creating PostgreSQL data directory at ${PGDATA}..."
     # Create it, unless it's already there and empty
     [ -d "${PGDATA}" -a `ls -l ${PGDATA} 2> /dev/null | wc -l` -eq 1 ] || mkdir -p "${PGDATA}"
     chown postgres "${PGDATA}"
     chmod 0700 "${PGDATA}"
     echo "Initialising PostgreSQL database..."
     su postgres -c "\"${PGINIT}\" -D \"${PGDATA}\" -E ${PGENCODING} -U ${PGSUPERUSER} ${PGLOCALE}"
     ;;

*)
     echo "Usage: ${0} (init|start|stop|restart|reload|status)"
     ;;

esac

# vim:set ft=sh sw=2 ts=2 sts=2 expandtab si ci:
