diff --speed-large-files --minimal -Nru socat-1.7.0.0.orig/readline-test.sh socat-1.7.0.0/readline-test.sh
--- socat-1.7.0.0.orig/readline-test.sh	2008-09-22 22:33:30.000000000 +0200
+++ socat-1.7.0.0/readline-test.sh	2009-03-19 20:57:41.847390097 +0100
@@ -1,4 +1,4 @@
-#! /bin/bash
+#! /opt/csw/bin/bash
 # source: readline-test.sh
 # Copyright Gerhard Rieger 2003-2008
 # Published under the GNU General Public License V.2, see file COPYING
diff --speed-large-files --minimal -Nru socat-1.7.0.0.orig/test.sh socat-1.7.0.0/test.sh
--- socat-1.7.0.0.orig/test.sh	2008-10-14 19:16:32.000000000 +0200
+++ socat-1.7.0.0/test.sh	2009-03-19 20:57:29.843380940 +0100
@@ -1,4 +1,4 @@
-#! /bin/bash
+#! /opt/csw/bin/bash
 # source: test.sh
 # Copyright Gerhard Rieger 2001-2008
 # Published under the GNU General Public License V.2, see file COPYING
@@ -11,6 +11,10 @@
 
 #set -vx
 
+# /usr/bin/tr doesn't handle the a-z range syntax (needs [a-z]) which
+# is used throughout this script
+alias tr=/usr/xpg4/bin/tr
+
 val_t=0.1
 NUMCOND=true
 #NUMCOND="test \$N -gt 70"
@@ -8931,6 +8935,9 @@
 elif [ "$ROOT" = root -a $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
     numCANT=$((numCANT+1))
+elif [ "$PF" = "IP6" ] && ( ! feat=$(testaddrs ip6) || ! runsip6 >/dev/null ); then
+    $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
 te="$td/test$N.stderr"
@@ -9051,6 +9058,11 @@
 elif ! feat=$(testaddrs $FEAT); then
     $PRINTF "test $F_n $TEST... ${YELLOW}$(echo $feat |tr a-z A-Z) not available${NORMAL}\n" $N
     numCANT=$((numCANT+1))
+
+elif [ "$KEYW" = "TCP6" -o "$KEYW" = "UDP6" -o "$KEYW" = "SCTP6" ] && \
+    ( ! feat=$(testaddrs ip6) || ! runsip6 >/dev/null ); then
+    $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
 te="$td/test$N.stderr"
@@ -9146,6 +9158,9 @@
 elif [ "$ROOT" = root -a $(id -u) -ne 0 -a "$withroot" -eq 0 ]; then
     $PRINTF "test $F_n $TEST... ${YELLOW}must be root${NORMAL}\n" $N
     numCANT=$((numCANT+1))
+elif [ "$PF" = "IP6" ] && ( ! feat=$(testaddrs ip6) || ! runsip6 ) >/dev/null; then
+    $PRINTF "test $F_n $TEST... ${YELLOW}IP6 not available${NORMAL}\n" $N
+    numCANT=$((numCANT+1))
 else
 tf="$td/test$N.stdout"
 te="$td/test$N.stderr"
