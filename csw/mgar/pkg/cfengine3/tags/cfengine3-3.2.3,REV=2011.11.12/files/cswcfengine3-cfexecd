#!/sbin/sh
#
#
#RC_KNUM 20
#RC_SNUM 80
#RC_KLEV 0,1,2,S
#RC_SLEV 3
#AUTOENABLE no
#FMRI application


NAME=cf-execd
DAEMON=/opt/csw/sbin/${NAME}
PIDFILE=/var/opt/csw/cfengine3/${NAME}.pid
I=`/usr/bin/basename $0`

[ -r /opt/csw/etc/cfengine3rc ] && . /opt/csw/etc/cfengine3rc
[ -r /etc/opt/csw/cfengine3rc ] && . /etc/opt/csw/cfengine3rc

OPTS="${CFEXECD_OPTS}"

smf_msg() {
    if [ -n "${SMF_FMRI}" ]
    then
	echo "$I: $@" >&2
    fi
}


stop() {
    if [ -r ${PIDFILE} ]
    then
	PID=`/bin/cat ${PIDFILE}`
	/bin/kill ${PID}

	# Now wait until the daemon is shutdown
	while /bin/kill -0 ${PID} > /dev/null 2>&1
	do
	    /bin/sleep 1
	done
    else
	smf_msg "No pid file ${PIDFILE} found for ${NAME}. Not killing ${NAME}."
    fi
    return 0
}

start() {
    if [ -r ${PIDFILE} ]
    then
	/bin/kill -0 `/bin/cat ${PIDFILE}` > /dev/null 2>&1
	if [ $? -eq 0 ]
	then
	    smf_msg "${NAME} already running. Not starting again"
	    return 0
	fi
	smf_msg "Remove stale pid file ${PIDFILE} of ${NAME}"
	rm -f ${PIDFILE}
    fi

    # Due to CFEngine's locking mechanism, stopping and starting in
    # fast sequence may fail sometimes. This leads to SMF going into
    # maintenance when trying to revive a died CFEngine daemon. Thus
    # we wait some time before starting the daemon, since the start
    # might be due to 'restart' or a died daemon
    sleep 2

    smf_msg "Start ${NAME} with options '${OPTS}'"

    ${DAEMON} ${OPTS}
    retval=$?
    if [ ${retval} -ne 0 ]
    then
	smf_msg "Failed to start ${NAME} with options '${OPTS}'. Exit Code ${retval}."
	if [ -n "${SMF_FMRI}" ]
	then
	    exit ${SMF_EXIT_ERR_FATAL}
	else
	    exit ${retval}
	fi
    fi

    smf_msg "Successfuly started ${NAME} with options '${OPTS}'"

    return 0
}

status() {
    if [ -r ${PIDFILE} ]
    then
	/bin/kill -0 `/bin/cat ${PIDFILE}` > /dev/null 2>&1
	if [ $? -eq 0 ]
	then
	    echo "${NAME} is running"
	    return 0
	fi
    fi

    echo "${NAME} is not running"
    return 0
}

case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    restart)
	stop
	start
	;;
    status)
	status
	;;
    *)
	echo "$0 {start|stop|restart|status}"
	exit 1
	;;
esac

exit 0
