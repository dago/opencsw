--- a/Makefile
+++ b/Makefile
@@ -265,29 +265,29 @@ base.opt: checkstack runtime core ocaml opt-core ocamlc.opt otherlibraries \
 COMPLIBDIR=$(LIBDIR)/compiler-libs
 
 install:
-	if test -d $(BINDIR); then : ; else $(MKDIR) $(BINDIR); fi
-	if test -d $(LIBDIR); then : ; else $(MKDIR) $(LIBDIR); fi
-	if test -d $(STUBLIBDIR); then : ; else $(MKDIR) $(STUBLIBDIR); fi
-	if test -d $(COMPLIBDIR); then : ; else $(MKDIR) $(COMPLIBDIR); fi
-	if test -d $(MANDIR)/man$(MANEXT); then : ; \
-	  else $(MKDIR) $(MANDIR)/man$(MANEXT); fi
-	cp VERSION $(LIBDIR)/
-	cd $(LIBDIR); rm -f dllbigarray.so dlllabltk.so dllnums.so \
+	if test -d $(DESTDIR)$(BINDIR); then : ; else $(MKDIR) $(DESTDIR)$(BINDIR); fi
+	if test -d $(DESTDIR)$(LIBDIR); then : ; else $(MKDIR) $(DESTDIR)$(LIBDIR); fi
+	if test -d $(DESTDIR)$(STUBLIBDIR); then : ; else $(MKDIR) $(DESTDIR)$(STUBLIBDIR); fi
+	if test -d $(DESTDIR)$(COMPLIBDIR); then : ; else $(MKDIR) $(DESTDIR)$(COMPLIBDIR); fi
+	if test -d $(DESTDIR)$(MANDIR)/man$(MANEXT); then : ; \
+	  else $(MKDIR) $(DESTDIR)$(MANDIR)/man$(MANEXT); fi
+	cp VERSION $(DESTDIR)$(LIBDIR)/
+	cd $(DESTDIR)$(LIBDIR); rm -f dllbigarray.so dlllabltk.so dllnums.so \
 	  dllthreads.so dllunix.so dllgraphics.so dllstr.so \
 	  dlltkanim.so
 	cd byterun; $(MAKE) install
-	cp ocamlc $(BINDIR)/ocamlc$(EXE)
-	cp ocaml $(BINDIR)/ocaml$(EXE)
+	cp ocamlc $(DESTDIR)$(BINDIR)/ocamlc$(EXE)
+	cp ocaml $(DESTDIR)$(BINDIR)/ocaml$(EXE)
 	cd stdlib; $(MAKE) install
-	cp lex/ocamllex $(BINDIR)/ocamllex$(EXE)
-	cp yacc/ocamlyacc$(EXE) $(BINDIR)/ocamlyacc$(EXE)
+	cp lex/ocamllex $(DESTDIR)$(BINDIR)/ocamllex$(EXE)
+	cp yacc/ocamlyacc$(EXE) $(DESTDIR)$(BINDIR)/ocamlyacc$(EXE)
 	cp utils/*.cmi parsing/*.cmi typing/*.cmi bytecomp/*.cmi driver/*.cmi \
-	   toplevel/*.cmi $(COMPLIBDIR)
+	   toplevel/*.cmi $(DESTDIR)$(COMPLIBDIR)
 	cp compilerlibs/ocamlcommon.cma compilerlibs/ocamlbytecomp.cma \
 	   compilerlibs/ocamltoplevel.cma $(BYTESTART) $(TOPLEVELSTART) \
-	   $(COMPLIBDIR)
-	cp expunge $(LIBDIR)/expunge$(EXE)
-	cp toplevel/topdirs.cmi $(LIBDIR)
+	   $(DESTDIR)$(COMPLIBDIR)
+	cp expunge $(DESTDIR)$(LIBDIR)/expunge$(EXE)
+	cp toplevel/topdirs.cmi $(DESTDIR)$(LIBDIR)
 	cd tools; $(MAKE) install
 	-cd man; $(MAKE) install
 	for i in $(OTHERLIBRARIES); do \
@@ -297,17 +297,17 @@ install:
 	if test -f ocamlopt; then $(MAKE) installopt; else :; fi
 	if test -f debugger/ocamldebug; then (cd debugger; $(MAKE) install); \
 	   else :; fi
-	cp config/Makefile $(LIBDIR)/Makefile.config
-	BINDIR=$(BINDIR) LIBDIR=$(LIBDIR) PREFIX=$(PREFIX) \
+	cp config/Makefile $(DESTDIR)$(LIBDIR)/Makefile.config
+	BINDIR=$(DESTDIR)$(BINDIR) LIBDIR=$(DESTDIR)$(LIBDIR) PREFIX=$(DESTDIR)$(PREFIX) MANDIR=$(DESTDIR)$(MANDIR) \
 	  ./build/partial-install.sh
 
 # Installation of the native-code compiler
 installopt:
 	cd asmrun; $(MAKE) install
-	cp ocamlopt $(BINDIR)/ocamlopt$(EXE)
+	cp ocamlopt $(DESTDIR)$(BINDIR)/ocamlopt$(EXE)
 	cd stdlib; $(MAKE) installopt
-	cp asmcomp/*.cmi $(COMPLIBDIR)
-	cp compilerlibs/ocamloptcomp.cma $(OPTSTART) $(COMPLIBDIR)
+	cp asmcomp/*.cmi $(DESTDIR)$(COMPLIBDIR)
+	cp compilerlibs/ocamloptcomp.cma $(OPTSTART) $(DESTDIR)$(COMPLIBDIR)
 	cd ocamldoc; $(MAKE) installopt
 	for i in $(OTHERLIBRARIES); \
 	  do (cd otherlibs/$$i; $(MAKE) installopt) || exit $$?; done
@@ -315,16 +315,16 @@ installopt:
 	cd tools; $(MAKE) installopt
 
 installoptopt:
-	cp ocamlc.opt $(BINDIR)/ocamlc.opt$(EXE)
-	cp ocamlopt.opt $(BINDIR)/ocamlopt.opt$(EXE)
-	cp lex/ocamllex.opt $(BINDIR)/ocamllex.opt$(EXE)
+	cp ocamlc.opt $(DESTDIR)$(BINDIR)/ocamlc.opt$(EXE)
+	cp ocamlopt.opt $(DESTDIR)$(BINDIR)/ocamlopt.opt$(EXE)
+	cp lex/ocamllex.opt $(DESTDIR)$(BINDIR)/ocamllex.opt$(EXE)
 	cp compilerlibs/ocamlcommon.cmxa compilerlibs/ocamlcommon.a \
 	   compilerlibs/ocamlbytecomp.cmxa compilerlibs/ocamlbytecomp.a \
 	   compilerlibs/ocamloptcomp.cmxa compilerlibs/ocamloptcomp.a \
 	   $(BYTESTART:.cmo=.cmx) $(BYTESTART:.cmo=.o) \
 	   $(OPTSTART:.cmo=.cmx) $(OPTSTART:.cmo=.o) \
-	   $(COMPLIBDIR)
-	cd $(COMPLIBDIR) && $(RANLIB) ocamlcommon.a ocamlbytecomp.a \
+	   $(DESTDIR)$(COMPLIBDIR)
+	cd $(DESTDIR)$(COMPLIBDIR) && $(RANLIB) ocamlcommon.a ocamlbytecomp.a \
 	   ocamloptcomp.a
 
 clean:: partialclean
