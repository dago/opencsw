From dad464664df6bd6c80bccfe89c6ebefec09d141d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Maciej=20Blizi=C5=84ski?= <blizinski@google.com>
Date: Thu, 25 Mar 2010 21:36:28 +0000
Subject: [PATCH 2/3] Got it to build with gnulib stuff.

---
 libwww2/HTUtils.h      |    5 ++
 makefiles/Makefile.sun |   21 +++++---
 src/Makefile           |    7 ++-
 src/accept.h           |    3 +-
 src/getdelim.c         |  137 ++++++++++++++++++++++++++++++++++++++++++++++++
 src/getline.c          |   30 +++++++++++
 6 files changed, 194 insertions(+), 9 deletions(-)
 create mode 100644 src/getdelim.c
 create mode 100644 src/getline.c

diff --git a/libwww2/HTUtils.h b/libwww2/HTUtils.h
index 74f0e5f..a3c05a6 100644
--- a/libwww2/HTUtils.h
+++ b/libwww2/HTUtils.h
@@ -28,6 +28,11 @@ Debug message control.
 #define STDIO_H
 #endif
 
+/* 
+ * for FIONBIO on Solaris
+ */
+#include <sys/filio.h>
+
 /*
  * Tracing now works as a boolean from a resource. No, there are no
  *   more if's than before...
diff --git a/makefiles/Makefile.sun b/makefiles/Makefile.sun
index 2cea009..287c54e 100755
--- a/makefiles/Makefile.sun
+++ b/makefiles/Makefile.sun
@@ -8,6 +8,8 @@
 
 # -------------------------- CUSTOMIZABLE OPTIONS ----------------------------
 
+PATH := /opt/studio/SOS12/SUNWspro/bin:$(PATH)
+
 #prereleaseflags = -DPRERELEASE
 prereleaseflags = -DPRERELEASE
 
@@ -17,7 +19,7 @@ RANLIB = ranlib
 
 #CC = cc
 #### On Sun's, this should be gcc (ANSI required).
-CC = gcc
+CC = cc
 
 #### Linker Flags 
 ldflags =
@@ -40,7 +42,7 @@ knrflag =
 #### For Convex whatever, do -DCONVEX
 #### For SCO ODT 3.0, do -DSCO -DSVR4 -DMOTIF1_2
 #### For Motorola SVR4, do -DSVR4 -DMOTOROLA -DMOTIF1_2
-sysconfigflags = -DMOTIF1_2 -DLINUX
+sysconfigflags = -DMOTIF1_2 -DLINUX -DUSE_DIRENT
 
 #### System libraries.
 # syslibs = -lPW -lsun -lmalloc
@@ -61,7 +63,7 @@ sysconfigflags = -DMOTIF1_2 -DLINUX
 #### For Motorola SVR4:
 # syslibs = -lnsl -lsocket -lgen
 
-syslibs = -lc
+syslibs = -lc -lsocket -lnsl
 
 #### X include file locations -- if your platform puts the X include
 #### files in a strange place, set this variable appropriately.  Else
@@ -74,8 +76,10 @@ syslibs = -lc
 # xinc = -I/usr/include/X11
 #### BSD/386
 # xinc = -I/usr/X11/include
+#### Solaris
+xing = -I/opt/csw/X11/include
 
-xinc = -I/usr/X11R6/include
+# xinc = -I/usr/X11R6/include
 
 #### X library locations.
 # xlibs = -lXm_s -lXmu -lXt_s -lX11_s
@@ -97,9 +101,12 @@ xinc = -I/usr/X11R6/include
 #### For Linux -- You must set "LD_LIBRARY_PATH" to include the path to
 ####   your X libs, or some may not be found by the loader. Check the
 ####   loader with "ldd Mosaic" after you build.
-xlibs = -L/usr/X11R6/lib -lXext -lXpm -lXm -lXmu -lXt -lX11 -lICE -lSM
-static_motif_xlibs = -L/usr/X11R6/lib -lXext -lXpm /usr/X11R6/lib/libXm.a -lXmu -lXt -lX11 -lICE -lSM
-static_xlibs = /usr/X11R6/lib/libXpm.a /usr/X11R6/lib/libXm.a /usr/X11R6/lib/libXmu.a /usr/X11R6/lib/libXt.a /usr/X11R6/lib/libXext.a /usr/X11R6/lib/libX11.a /usr/X11R6/lib/libSM.a /usr/X11R6/lib/libICE.a
+# xlibs = -L/usr/X11R6/lib -lXext -lXpm -lXm -lXmu -lXt -lX11 -lICE -lSM
+
+# Solaris
+xlibs = -L/opt/csw/X11/lib -lXext -lXpm -lXm -lXmu -lXt -lX11 -lICE -lSM
+static_motif_xlibs = -L/opt/csw/X11/lib -lXext -lXpm /opt/csw/X11/lib/libXm.a -lXmu -lXt -lX11 -lICE -lSM
+static_xlibs = /opt/csw/X11/lib/libXpm.a /opt/csw/X11/lib/libXm.a /opt/csw/X11/lib/libXmu.a /opt/csw/X11/lib/libXt.a /opt/csw/X11/lib/libXext.a /opt/csw/X11/lib/libX11.a /opt/csw/X11/lib/libSM.a /opt/csw/X11/lib/libICE.a
 #### For BSD/386:
 # xlibs = -L/usr/X11/lib -lXm -lXmu -lXt -lX11
 #### For Motorola SVR4:
diff --git a/src/Makefile b/src/Makefile
index 04ab35b..7d461b0 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -26,7 +26,9 @@ OBJS = main.o gui.o gui-dialogs.o gui-menubar.o gui-documents.o gui-news.o\
   medcut.o mo-hdf.o hotfile.o child.o mailto.o readJPEG.o readPNG.o\
   accept.o cciServer.o cciBindings.o cciBindings2.o support.o bla.o\
   kcms.o md5.o proxy-dialogs.o proxy-misc.o gui-popup.o gui-ftp.o\
-  prefs.o
+  prefs.o \
+  getline.o \
+  getdelim.o
 
 AUXCFILES = hdf-browse.c
 AUXOBJS = hdf-browse.o
@@ -226,3 +228,6 @@ gui-ftp.o: prefs.h prefs_defs.h gui.h gui-ftp.h gui-popup.h
 gui-ftp.o: ../libhtmlw/HTML.h hotlist.h ../libnut/system.h
 
 prefs.o: mosaic.h ../libXmx/Xmx.h toolbar.h prefs.h prefs_defs.h
+
+getline.o: getline.c
+getdelim.o: getdelim.c
diff --git a/src/accept.h b/src/accept.h
index 6470b5f..4db5725 100644
--- a/src/accept.h
+++ b/src/accept.h
@@ -1,3 +1,5 @@
+#include <sys/filio.h>
+
 typedef int	ListenAddress;
 
 extern ListenAddress NetServerInitSocket();
@@ -6,4 +8,3 @@ extern int NetRead();
 extern int NetServerWrite();
 extern int NetCloseConnection();
 extern int NetIsThereInput();
-
diff --git a/src/getdelim.c b/src/getdelim.c
new file mode 100644
index 0000000..c024090
--- /dev/null
+++ b/src/getdelim.c
@@ -0,0 +1,137 @@
+/* getdelim.c --- Implementation of replacement getdelim function.
+   Copyright (C) 1994, 1996, 1997, 1998, 2001, 2003, 2005, 2006, 2007, 2008,
+   2009, 2010 Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or
+   modify it under the terms of the GNU General Public License as
+   published by the Free Software Foundation; either version 2, or (at
+   your option) any later version.
+
+   This program is distributed in the hope that it will be useful, but
+   WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+   02110-1301, USA.  */
+
+/* Ported from glibc by Simon Josefsson. */
+
+#include <config.h>
+
+/* Don't use __attribute__ __nonnull__ in this compilation unit.  Otherwise gcc
+   optimizes away the lineptr == NULL || n == NULL || fp == NULL tests below.  */
+#define _GL_ARG_NONNULL(params)
+
+#include <stdio.h>
+
+#include <limits.h>
+#include <stdint.h>
+#include <stdlib.h>
+#include <errno.h>
+
+#ifndef SSIZE_MAX
+# define SSIZE_MAX ((ssize_t) (SIZE_MAX / 2))
+#endif
+
+#if USE_UNLOCKED_IO
+# include "unlocked-io.h"
+# define getc_maybe_unlocked(fp)        getc(fp)
+#elif !HAVE_FLOCKFILE || !HAVE_FUNLOCKFILE || !HAVE_DECL_GETC_UNLOCKED
+# undef flockfile
+# undef funlockfile
+# define flockfile(x) ((void) 0)
+# define funlockfile(x) ((void) 0)
+# define getc_maybe_unlocked(fp)        getc(fp)
+#else
+# define getc_maybe_unlocked(fp)        getc_unlocked(fp)
+#endif
+
+/* Read up to (and including) a DELIMITER from FP into *LINEPTR (and
+   NUL-terminate it).  *LINEPTR is a pointer returned from malloc (or
+   NULL), pointing to *N characters of space.  It is realloc'ed as
+   necessary.  Returns the number of characters read (not including
+   the null terminator), or -1 on error or EOF.  */
+
+ssize_t
+getdelim (char **lineptr, size_t *n, int delimiter, FILE *fp)
+{
+  ssize_t result;
+  size_t cur_len = 0;
+
+  if (lineptr == NULL || n == NULL || fp == NULL)
+    {
+      errno = EINVAL;
+      return -1;
+    }
+
+  flockfile (fp);
+
+  if (*lineptr == NULL || *n == 0)
+    {
+      char *new_lineptr;
+      *n = 120;
+      new_lineptr = (char *) realloc (*lineptr, *n);
+      if (new_lineptr == NULL)
+        {
+          result = -1;
+          goto unlock_return;
+        }
+      *lineptr = new_lineptr;
+    }
+
+  for (;;)
+    {
+      int i;
+
+      i = getc_maybe_unlocked (fp);
+      if (i == EOF)
+        {
+          result = -1;
+          break;
+        }
+
+      /* Make enough space for len+1 (for final NUL) bytes.  */
+      if (cur_len + 1 >= *n)
+        {
+          size_t needed_max =
+            SSIZE_MAX < SIZE_MAX ? (size_t) SSIZE_MAX + 1 : SIZE_MAX;
+          size_t needed = 2 * *n + 1;   /* Be generous. */
+          char *new_lineptr;
+
+          if (needed_max < needed)
+            needed = needed_max;
+          if (cur_len + 1 >= needed)
+            {
+              result = -1;
+              errno = EOVERFLOW;
+              goto unlock_return;
+            }
+
+          new_lineptr = (char *) realloc (*lineptr, needed);
+          if (new_lineptr == NULL)
+            {
+              result = -1;
+              goto unlock_return;
+            }
+
+          *lineptr = new_lineptr;
+          *n = needed;
+        }
+
+      (*lineptr)[cur_len] = i;
+      cur_len++;
+
+      if (i == delimiter)
+        break;
+    }
+  (*lineptr)[cur_len] = '\0';
+  result = cur_len ? cur_len : result;
+
+ unlock_return:
+  funlockfile (fp); /* doesn't set errno */
+
+  return result;
+}
diff --git a/src/getline.c b/src/getline.c
new file mode 100644
index 0000000..e9a87db
--- /dev/null
+++ b/src/getline.c
@@ -0,0 +1,30 @@
+/* getline.c --- Implementation of replacement getline function.
+   Copyright (C) 2005, 2006, 2007, 2009, 2010 Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or
+   modify it under the terms of the GNU General Public License as
+   published by the Free Software Foundation; either version 2, or (at
+   your option) any later version.
+
+   This program is distributed in the hope that it will be useful, but
+   WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   General Public License for more details.
+
+   You should have received a copy of the GNU General Public License
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+   02110-1301, USA.  */
+
+/* Written by Simon Josefsson. */
+
+#include <config.h>
+
+#include <stdio.h>
+#include <stdlib.h>
+
+ssize_t
+getline (char **lineptr, size_t *n, FILE *stream)
+{
+  return getdelim (lineptr, n, '\n', stream);
+}
-- 
1.6.5.1

