--- aisleriot/sol.c.old	2004-08-06 18:46:19.004762000 -0400
+++ aisleriot/sol.c	2004-08-06 18:46:36.464698000 -0400
@@ -85,6 +85,51 @@
 #define DEFAULT_VARIATION "klondike.scm"
 #define GNOME_SESSION_BUG
 
+/* This function is only required for SunOS, all other supported OS
+   have this function in their system library. This is taken from viewmol by Joerg-R. Hill */
+
+int scandir(const char *dir, struct dirent ***namelist,
+            int (*select)(const struct dirent *),
+            int (*compar)(const struct dirent **, const struct dirent **))
+{
+  DIR *d;
+  struct dirent *entry;
+  register int i=0;
+  size_t entrysize;
+
+  if ((d=opendir(dir)) == NULL)
+     return(-1);
+
+  *namelist=NULL;
+  while ((entry=readdir(d)) != NULL)
+  {
+    if (select == NULL || (select != NULL && (*select)(entry)))
+    {
+      *namelist=(struct dirent **)realloc((void *)(*namelist),
+                 (size_t)((i+1)*sizeof(struct dirent *)));
+       if (*namelist == NULL) return(-1);
+       entrysize=sizeof(struct dirent)-sizeof(entry->d_name)+strlen(entry->d_name)+1;
+       (*namelist)[i]=(struct dirent *)malloc(entrysize);
+       if ((*namelist)[i] == NULL) return(-1);
+       memcpy((*namelist)[i], entry, entrysize);
+       i++;
+    }
+  }
+  if (closedir(d)) return(-1);
+  if (i == 0) return(-1);
+  if (compar != NULL)
+    qsort((void *)(*namelist), (size_t)i, sizeof(struct dirent *), compar);
+
+  return(i);
+}
+
+int alphasort(const struct dirent **a, const struct dirent **b)
+{
+  return(strcmp((*a)->d_name, (*b)->d_name));
+}
+
+
+
 gchar* game_file_to_name (const gchar* file)
 {
   char* p, *buf = g_path_get_basename(file);
