--- a/ldap/servers/plugins/posix-winsync/posix-winsync.c
+++ b/ldap/servers/plugins/posix-winsync/posix-winsync.c
@@ -372,23 +372,38 @@ sync_acct_disable(void *cbdata, /* the usual domain config data */
     return;
 }
 
-/* Returns non-zero if the attribute value sets are identical.  */
+
 static int
 attr_compare_equal(Slapi_Attr *a, Slapi_Attr *b)
 {
-    int i = 0;
-    Slapi_Value *va = NULL;
-
-    /* Iterate through values in attr a and search for each in attr b */
-    for (i = slapi_attr_first_value(a, &va); va && (i != -1); i = slapi_attr_next_value(a, i, &va)) {
-
-        /* Compare the entire attribute value */
-        if (slapi_attr_value_find(b, slapi_value_get_berval(va)) != 0) {
-            return 0;
+	/* For now only handle single values */
+	Slapi_Value *va = NULL;
+	Slapi_Value *vb = NULL;
+	int num_a = 0;
+	int num_b = 0;
+	int match = 1;
+
+	slapi_attr_get_numvalues(a,&num_a);
+	slapi_attr_get_numvalues(b,&num_b);
+
+	if (num_a == num_b) {
+		slapi_attr_first_value(a, &va);
+		slapi_attr_first_value(b, &vb);
+
+		/* If either val is less than n, then check if the length, then values are
+		 * equal.  If both are n or greater, then only compare the first n chars. 
+		 * If n is 0, then just compare the entire attribute. */
+        if (va->bv.bv_len == vb->bv.bv_len) {
+            if (slapi_attr_value_find(b, slapi_value_get_berval(va)) != 0) {
+                match = 0;
+            }
+        } else {
+            match = 0;
         }
-    }
-    return 1;
-}
+	} else {
+		match = 0;
+	}
+	return match;}
 
 /* look in the parent nodes of ds_entry for nis domain entry */
 char *
@@ -777,10 +792,10 @@ posix_winsync_pre_ds_mod_user_cb(void *cbdata, const Slapi_Entry *rawentry, Slap
     slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name,
                     "--> _pre_ds_mod_user_cb -- begin\n");
 
-    if ((NULL == rawentry) || (NULL == ad_entry) || (NULL == ds_entry)) {
+    if ((NULL == ad_entry) || (NULL == ds_entry)) {
         slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name,
                         "<-- _pre_ds_mod_user_cb -- Empty %s entry.\n",
-                        (NULL==rawentry)?"rawentry":(NULL==ad_entry)?"ad entry":"ds entry");
+                        (NULL==ad_entry)?"ad entry":"ds entry");
         return;
     }
 
@@ -898,7 +913,7 @@ posix_winsync_pre_ds_mod_user_cb(void *cbdata, const Slapi_Entry *rawentry, Slap
         }
         slapi_value_free(&voc);
     }
-    sync_acct_disable(cbdata, rawentry, ds_entry, ACCT_DISABLE_TO_DS, NULL, smods, do_modify);
+    sync_acct_disable(cbdata, ad_entry, ds_entry, ACCT_DISABLE_TO_DS, NULL, smods, do_modify);
     slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name, "<-- _pre_ds_mod_user_cb %s %s\n",
                     slapi_sdn_get_dn(slapi_entry_get_sdn_const(ds_entry)), (do_modify) ? "modified"
                         : "not modified");
@@ -944,14 +959,16 @@ posix_winsync_pre_ds_mod_group_cb(void *cbdata, const Slapi_Entry *rawentry, Sla
                 Slapi_Attr *local_attr = NULL;
                 char *local_type = NULL;
 
-                slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name, "1.\n");
+                slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name, 
+                                "_pre_ds_mod_group_cb -- found AD attr %s\n", type);
                 slapi_attr_get_valueset(attr, &vs);
                 local_type = slapi_ch_strdup(attr_map[i].ldap_attribute_name);
                 slapi_entry_attr_find(ds_entry, local_type, &local_attr);
                 is_present_local = (NULL == local_attr) ? 0 : 1;
                 if (is_present_local) {
                     int values_equal = 0;
-                    slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name, "2.\n");
+                    slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name, 
+                                    "_pre_ds_mod_group_cb -- compare with DS attr %s\n", local_type);
                     values_equal = attr_compare_equal(attr, local_attr);
                     if (!values_equal) {
                         slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name,
@@ -964,13 +981,13 @@ posix_winsync_pre_ds_mod_group_cb(void *cbdata, const Slapi_Entry *rawentry, Sla
                         *do_modify = 1;
                     }
                 } else {
-                    slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name, "3.\n");
+                    slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name, "_pre_ds_mod_group_cb --  add attr\n");
 
                     slapi_mods_add_mod_values(smods, LDAP_MOD_ADD, local_type,
                                               valueset_get_valuearray(vs));
                     *do_modify = do_modify_local = 1;
                 }
-                slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name, "4.\n");
+                slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name, "_pre_ds_mod_group_cb -- values compared\n");
 
                 slapi_ch_free((void**) &local_type);
                 slapi_valueset_free(vs);
@@ -1109,7 +1126,7 @@ posix_winsync_pre_ds_add_user_cb(void *cbdata, const Slapi_Entry *rawentry, Slap
             }
         }
     }
-    sync_acct_disable(cbdata, rawentry, ds_entry, ACCT_DISABLE_TO_DS, ds_entry, NULL, NULL);
+    sync_acct_disable(cbdata, ad_entry, ds_entry, ACCT_DISABLE_TO_DS, ds_entry, NULL, NULL);
     slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name, "<-- _pre_ds_add_user_cb -- end\n");
 
     return;
--- a/ldap/servers/plugins/posix-winsync/posix-winsync.c
+++ b/ldap/servers/plugins/posix-winsync/posix-winsync.c
@@ -68,6 +68,7 @@
 #include <stdlib.h>
 #include "posix-wsp-ident.h"
 #include "posix-group-func.h"
+#include "slap.h"
 
 #define MEMBEROFTASK "memberuid task"
 Slapi_Value **
@@ -136,7 +137,7 @@ enum
  *         -1 - some sort of error
  */
 static int
-check_account_lock(Slapi_Entry *ds_entry, int *isvirt)
+_check_account_lock(Slapi_Entry *ds_entry, int *isvirt)
 {
     int rc = 1;
     Slapi_ValueSet *values = NULL;
@@ -155,7 +156,7 @@ check_account_lock(Slapi_Entry *ds_entry, int *isvirt)
         }
         slapi_ch_free_string(&strval);
         slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name,
-                        "<-- check_account_lock - entry [%s] has real "
+                        "<-- _check_account_lock - entry [%s] has real "
                             "attribute nsAccountLock and entry %s locked\n",
                         slapi_entry_get_dn_const(ds_entry), rc ? "is not" : "is");
         return rc;
@@ -182,13 +183,13 @@ check_account_lock(Slapi_Entry *ds_entry, int *isvirt)
             slapi_vattr_values_free(&values, &actual_type_name, attr_free_flags);
         }
         slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name,
-                        "<-- check_account_lock - entry [%s] has virtual "
+                        "<-- _check_account_lock - entry [%s] has virtual "
                             "attribute nsAccountLock and entry %s locked\n",
                         slapi_entry_get_dn_const(ds_entry), rc ? "is not" : "is");
     } else {
         rc = 1; /* no attr == entry is enabled */
         slapi_log_error(SLAPI_LOG_PLUGIN, posix_winsync_plugin_name,
-                        "<-- check_account_lock - entry [%s] does not "
+                        "<-- _check_account_lock - entry [%s] does not "
                             "have attribute nsAccountLock - entry is not locked\n",
                         slapi_entry_get_dn_const(ds_entry));
     }
@@ -225,7 +226,7 @@ sync_acct_disable(void *cbdata, /* the usual domain config data */
     int isvirt = 0;
 
     /* get the account lock state of the ds entry */
-    if (0 == check_account_lock(ds_entry, &isvirt)) {
+    if (0 == _check_account_lock(ds_entry, &isvirt)) {
         ds_is_enabled = 0;
     }
     if (isvirt)
