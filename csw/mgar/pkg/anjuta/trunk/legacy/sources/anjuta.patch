diff -Nru anjuta-1.2.2.orig/gdl/gdl-dock-item.c anjuta-1.2.2/gdl/gdl-dock-item.c
--- anjuta-1.2.2.orig/gdl/gdl-dock-item.c	2003-04-10 02:16:07.000000000 -0400
+++ anjuta-1.2.2/gdl/gdl-dock-item.c	2004-05-25 14:38:00.496003000 -0400
@@ -48,6 +48,10 @@
 #include "libgdltypebuiltins.h"
 #include "libgdlmarshal.h"
 
+#define GNOME_CALL_PARENT_INT(parent_class_cast, name, args)               \
+        ((parent_class_cast(parent_class)->name != NULL) ?              \
+         parent_class_cast(parent_class)->name args : (int)0)
+
 
 /* ----- Private prototypes ----- */
 
@@ -853,7 +857,7 @@
 
     if (GTK_WIDGET_DRAWABLE (widget) && event->window == widget->window) {
         gdl_dock_item_paint (widget, event);
-        GNOME_CALL_PARENT (GTK_WIDGET_CLASS, expose_event, (widget, event));
+        GNOME_CALL_PARENT_INT (GTK_WIDGET_CLASS, expose_event, (widget, event));
     }
   
     return FALSE;
diff -Nru anjuta-1.2.2.orig/gdl/gdl-dock-object.h anjuta-1.2.2/gdl/gdl-dock-object.h
--- anjuta-1.2.2.orig/gdl/gdl-dock-object.h	2003-04-10 02:16:07.000000000 -0400
+++ anjuta-1.2.2/gdl/gdl-dock-object.h	2004-05-25 14:24:01.756016000 -0400
@@ -202,7 +202,7 @@
 
 
 /* helper macros */
-#define GDL_TRACE_OBJECT(object, format, args...) \
+#define GDL_TRACE_OBJECT(object, format, ...) \
     G_STMT_START {                            \
     g_log (G_LOG_DOMAIN,                      \
 	   G_LOG_LEVEL_DEBUG,                 \
@@ -214,7 +214,7 @@
            G_OBJECT (object)->ref_count, \
            (GTK_IS_OBJECT (object) && GTK_OBJECT_FLOATING (object)) ? "(float)" : "", \
            GDL_IS_DOCK_OBJECT (object) ? GDL_DOCK_OBJECT (object)->freeze_count : -1, \
-	   ##args); } G_STMT_END                   
+	   __VA_ARGS__); } G_STMT_END                   
     
 
 
diff -Nru anjuta-1.2.2.orig/gdl/gdl-dock-tablabel.c anjuta-1.2.2/gdl/gdl-dock-tablabel.c
--- anjuta-1.2.2.orig/gdl/gdl-dock-tablabel.c	2003-04-10 02:16:07.000000000 -0400
+++ anjuta-1.2.2/gdl/gdl-dock-tablabel.c	2004-05-25 14:39:30.596086000 -0400
@@ -35,6 +35,10 @@
 #include "gdl-dock-item.h"
 #include "libgdlmarshal.h"
 
+#define GNOME_CALL_PARENT_INT(parent_class_cast, name, args)               \
+        ((parent_class_cast(parent_class)->name != NULL) ?              \
+         parent_class_cast(parent_class)->name args : (int)0)
+
 
 /* ----- Private prototypes ----- */
 
@@ -389,7 +393,7 @@
     g_return_val_if_fail (event != NULL, FALSE);
 
     if (GTK_WIDGET_VISIBLE (widget) && GTK_WIDGET_MAPPED (widget)) {
-        GNOME_CALL_PARENT (GTK_WIDGET_CLASS, expose_event, (widget, event));
+        GNOME_CALL_PARENT_INT (GTK_WIDGET_CLASS, expose_event, (widget, event));
         gdl_dock_tablabel_paint (widget, event);
     };
   
diff -Nru anjuta-1.2.2.orig/gdl/gdl-tools.h anjuta-1.2.2/gdl/gdl-tools.h
--- anjuta-1.2.2.orig/gdl/gdl-tools.h	2003-04-10 02:16:07.000000000 -0400
+++ anjuta-1.2.2/gdl/gdl-tools.h	2004-05-25 14:23:17.676015000 -0400
@@ -65,13 +65,13 @@
 	   __FILE__,                          \
 	   __LINE__); } G_STMT_END 
 
-#define GDL_TRACE_EXTRA(format, args...) G_STMT_START {     \
+#define GDL_TRACE_EXTRA(format, ...) G_STMT_START {     \
     g_log (G_LOG_DOMAIN,                      \
 	   G_LOG_LEVEL_DEBUG,                 \
 	   "file %s: line %d: "format,        \
 	   __FILE__,                          \
 	   __LINE__,                          \
-	   ##args); } G_STMT_END                       
+	   __VA_ARGS__); } G_STMT_END                       
 #endif /* __GNUC__ */
 
 #else /* DO_GDL_TRACE */
diff -Nru anjuta-1.2.2.orig/global-tags/Makefile.in anjuta-1.2.2/global-tags/Makefile.in
--- anjuta-1.2.2.orig/global-tags/Makefile.in	2004-04-14 01:07:18.000000000 -0400
+++ anjuta-1.2.2/global-tags/Makefile.in	2004-05-25 14:17:52.406172000 -0400
@@ -170,7 +170,7 @@
 
 EXTRA_DIST = create_global_tags.sh
 
-INCLUDES = -I$(top_srcdir)/tagmanager/include -Wall $(GLIB_CFLAGS)
+INCLUDES = -I$(top_srcdir)/tagmanager/include  $(GLIB_CFLAGS)
 
 noinst_PROGRAMS = tm_global_tags
 
diff -Nru anjuta-1.2.2.orig/src/launcher.c anjuta-1.2.2/src/launcher.c
--- anjuta-1.2.2.orig/src/launcher.c	2004-04-08 00:15:31.000000000 -0400
+++ anjuta-1.2.2/src/launcher.c	2004-05-25 14:49:23.346018000 -0400
@@ -23,7 +23,7 @@
 #include <unistd.h>
 #include <fcntl.h>
 #include <signal.h>
-#include <pty.h>
+//#include <pty.h>
 #include <assert.h>
 #include <gnome.h>
 #include <termios.h>
@@ -38,6 +38,91 @@
 #include "anjuta.h"
 
 #define FILE_BUFFER_SIZE 1024
+#define __MAX_BAUD B460800
+
+/* Forkpty */
+#include <stdlib.h>
+#include <sys/ioctl.h>
+#include <sys/stream.h>
+#include <sys/stropts.h>
+
+/* fork_pty() remplacement for Solaris.
+ * This ignore the last two arguments
+ * for the moment
+ */
+int
+forkpty (int *amaster,
+            char *name,
+            void *unused1,
+            void *unused2)
+{
+  int master, slave;
+  char *slave_name;
+  pid_t pid;
+  
+  master = open("/dev/ptmx", O_RDWR);
+  if (master < 0)
+    return -1;
+
+  if (grantpt (master) < 0)
+    {
+      close (master);
+      return -1;
+    }
+
+  if (unlockpt (master) < 0)
+    {
+      close (master);
+      return -1;
+    }
+
+  slave_name = ptsname (master);
+  if (slave_name == NULL)
+    {
+      close (master);
+      return -1;
+    }
+
+  slave = open (slave_name, O_RDWR);
+  if (slave < 0)
+    {
+      close (master);
+      return -1;
+    }
+
+  if (ioctl (slave, I_PUSH, "ptem") < 0
+      || ioctl (slave, I_PUSH, "ldterm") < 0)
+    {
+      close (slave);
+      close (master);
+      return -1;
+    }
+
+  if (amaster)
+    *amaster = master;
+
+  if (name)
+    strcpy (name, slave_name);
+  
+  pid = fork ();
+  switch (pid)
+    {
+    case -1: /* Error */
+      return -1;
+    case 0: /* Child */
+      close (master);
+      dup2 (slave, STDIN_FILENO);
+      dup2 (slave, STDOUT_FILENO);
+      dup2 (slave, STDERR_FILENO);
+      return 0;
+    default: /* Parent */
+      close (slave);
+      return pid;
+    }
+
+  return -1;
+} 
+
 /*
 static gboolean
 anjuta_launcher_pty_check_child_exit_code (AnjutaLauncher *launcher,
diff -Nru anjuta-1.2.2.orig/src/launcher.h anjuta-1.2.2/src/launcher.h
--- anjuta-1.2.2.orig/src/launcher.h	2004-04-05 06:39:58.000000000 -0400
+++ anjuta-1.2.2/src/launcher.h	2004-05-25 14:51:09.116015000 -0400
@@ -81,7 +81,7 @@
 									   const gchar *charset);
 void anjuta_launcher_send_stdin (AnjutaLauncher *launcher, const gchar *in);
 void anjuta_launcher_send_ptyin (AnjutaLauncher *launcher, const gchar *in);
-gint anjuta_launcher_get_child_pid (AnjutaLauncher *launcher);
+pid_t anjuta_launcher_get_child_pid (AnjutaLauncher *launcher);
 void anjuta_launcher_reset (AnjutaLauncher *launcher);
 void anjuta_launcher_signal (AnjutaLauncher *launcher, int sig);
 void anjuta_launcher_set_buffered_output (AnjutaLauncher *launcher,
diff -Nru anjuta-1.2.2.orig/src/message-manager-private.cc anjuta-1.2.2/src/message-manager-private.cc
--- anjuta-1.2.2.orig/src/message-manager-private.cc	2004-04-08 00:15:31.000000000 -0400
+++ anjuta-1.2.2/src/message-manager-private.cc	2004-05-25 14:52:45.936018000 -0400
@@ -67,7 +67,7 @@
 #ifdef DEBUG
   #define DEBUG_PRINT g_message
 #else
-  #define DEBUG_PRINT(ARGS...)
+  #define DEBUG_PRINT(...)
 #endif
 
 enum
diff -Nru anjuta-1.2.2.orig/src/utilities.c anjuta-1.2.2/src/utilities.c
--- anjuta-1.2.2.orig/src/utilities.c	2004-04-06 07:26:27.000000000 -0400
+++ anjuta-1.2.2/src/utilities.c	2004-05-25 14:59:35.066006000 -0400
@@ -37,6 +37,49 @@
 #include "properties.h"
 #include "resources.h"
 
+/* This function is only required for SunOS, all other supported OS
+   have this function in their system library. This is taken from viewmol by Joerg-R. Hill */
+
+int scandir(const char *dir, struct dirent ***namelist,
+            int (*select)(const struct dirent *),
+            int (*compar)(const struct dirent **, const struct dirent **))
+{
+  DIR *d;
+  struct dirent *entry;
+  register int i=0;
+  size_t entrysize;
+
+  if ((d=opendir(dir)) == NULL)
+     return(-1);
+
+  *namelist=NULL;
+  while ((entry=readdir(d)) != NULL)
+  {
+    if (select == NULL || (select != NULL && (*select)(entry)))
+    {
+      *namelist=(struct dirent **)realloc((void *)(*namelist),
+                 (size_t)((i+1)*sizeof(struct dirent *)));
+	if (*namelist == NULL) return(-1);
+	entrysize=sizeof(struct dirent)-sizeof(entry->d_name)+strlen(entry->d_name)+1;
+	(*namelist)[i]=(struct dirent *)malloc(entrysize);
+	if ((*namelist)[i] == NULL) return(-1);
+	memcpy((*namelist)[i], entry, entrysize);
+	i++;
+    }
+  }
+  if (closedir(d)) return(-1);
+  if (i == 0) return(-1);
+  if (compar != NULL)
+    qsort((void *)(*namelist), (size_t)i, sizeof(struct dirent *), compar);
+    
+  return(i);
+}
+
+int alphasort(const struct dirent **a, const struct dirent **b)
+{
+  return(strcmp((*a)->d_name, (*b)->d_name));
+}
+
 const gchar *
 extract_filename (const gchar * full_filename)
 {
--- anjuta/src/search_preferences.c.orig	2005-03-01 07:47:25.386842000 -0500
+++ anjuta/src/search_preferences.c	2005-03-01 07:48:17.306763000 -0500
@@ -420,8 +420,11 @@
 	gint nb;
 	GList *list;
 
-	fprintf (stream, "search.setting.nb=%d\n", sps->nb_ss);
-	fprintf (stream, "search.setting.default=%s\n", sps->name_default);
+	if (sps->nb_ss)
+		fprintf (stream, "search.setting.nb=%d\n", sps->nb_ss);
+	
+	if (sps->name_default)
+		fprintf (stream, "search.setting.default=%s\n", sps->name_default);
 	list = sps->setting;
 	for (nb=0; nb<sps->nb_ss; nb++)
 	{
